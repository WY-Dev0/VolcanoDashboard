/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ShVolcanoBatchV1alpha1JobStatus', function() {
    it('should create an instance of ShVolcanoBatchV1alpha1JobStatus', function() {
      // uncomment below and update the code to test ShVolcanoBatchV1alpha1JobStatus
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be.a(Kubernetes.ShVolcanoBatchV1alpha1JobStatus);
    });

    it('should have the property conditions (base name: "conditions")', function() {
      // uncomment below and update the code to test the property conditions
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property controlledResources (base name: "controlledResources")', function() {
      // uncomment below and update the code to test the property controlledResources
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property failed (base name: "failed")', function() {
      // uncomment below and update the code to test the property failed
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property minAvailable (base name: "minAvailable")', function() {
      // uncomment below and update the code to test the property minAvailable
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property pending (base name: "pending")', function() {
      // uncomment below and update the code to test the property pending
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property retryCount (base name: "retryCount")', function() {
      // uncomment below and update the code to test the property retryCount
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property running (base name: "running")', function() {
      // uncomment below and update the code to test the property running
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property runningDuration (base name: "runningDuration")', function() {
      // uncomment below and update the code to test the property runningDuration
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property succeeded (base name: "succeeded")', function() {
      // uncomment below and update the code to test the property succeeded
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property taskStatusCount (base name: "taskStatusCount")', function() {
      // uncomment below and update the code to test the property taskStatusCount
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property terminating (base name: "terminating")', function() {
      // uncomment below and update the code to test the property terminating
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property unknown (base name: "unknown")', function() {
      // uncomment below and update the code to test the property unknown
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new Kubernetes.ShVolcanoBatchV1alpha1JobStatus();
      //expect(instance).to.be();
    });

  });

}));
