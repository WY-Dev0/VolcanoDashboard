/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.AppsV1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppsV1Api', function() {
    describe('createAppsV1NamespacedControllerRevision', function() {
      it('should call createAppsV1NamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test createAppsV1NamespacedControllerRevision
        //instance.createAppsV1NamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppsV1NamespacedDaemonSet', function() {
      it('should call createAppsV1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test createAppsV1NamespacedDaemonSet
        //instance.createAppsV1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppsV1NamespacedDeployment', function() {
      it('should call createAppsV1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test createAppsV1NamespacedDeployment
        //instance.createAppsV1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppsV1NamespacedReplicaSet', function() {
      it('should call createAppsV1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test createAppsV1NamespacedReplicaSet
        //instance.createAppsV1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAppsV1NamespacedStatefulSet', function() {
      it('should call createAppsV1NamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test createAppsV1NamespacedStatefulSet
        //instance.createAppsV1NamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1CollectionNamespacedControllerRevision', function() {
      it('should call deleteAppsV1CollectionNamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1CollectionNamespacedControllerRevision
        //instance.deleteAppsV1CollectionNamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1CollectionNamespacedDaemonSet', function() {
      it('should call deleteAppsV1CollectionNamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1CollectionNamespacedDaemonSet
        //instance.deleteAppsV1CollectionNamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1CollectionNamespacedDeployment', function() {
      it('should call deleteAppsV1CollectionNamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1CollectionNamespacedDeployment
        //instance.deleteAppsV1CollectionNamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1CollectionNamespacedReplicaSet', function() {
      it('should call deleteAppsV1CollectionNamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1CollectionNamespacedReplicaSet
        //instance.deleteAppsV1CollectionNamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1CollectionNamespacedStatefulSet', function() {
      it('should call deleteAppsV1CollectionNamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1CollectionNamespacedStatefulSet
        //instance.deleteAppsV1CollectionNamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1NamespacedControllerRevision', function() {
      it('should call deleteAppsV1NamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1NamespacedControllerRevision
        //instance.deleteAppsV1NamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1NamespacedDaemonSet', function() {
      it('should call deleteAppsV1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1NamespacedDaemonSet
        //instance.deleteAppsV1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1NamespacedDeployment', function() {
      it('should call deleteAppsV1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1NamespacedDeployment
        //instance.deleteAppsV1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1NamespacedReplicaSet', function() {
      it('should call deleteAppsV1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1NamespacedReplicaSet
        //instance.deleteAppsV1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAppsV1NamespacedStatefulSet', function() {
      it('should call deleteAppsV1NamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test deleteAppsV1NamespacedStatefulSet
        //instance.deleteAppsV1NamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAppsV1APIResources', function() {
      it('should call getAppsV1APIResources successfully', function(done) {
        //uncomment below and update the code to test getAppsV1APIResources
        //instance.getAppsV1APIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1ControllerRevisionForAllNamespaces', function() {
      it('should call listAppsV1ControllerRevisionForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAppsV1ControllerRevisionForAllNamespaces
        //instance.listAppsV1ControllerRevisionForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1DaemonSetForAllNamespaces', function() {
      it('should call listAppsV1DaemonSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAppsV1DaemonSetForAllNamespaces
        //instance.listAppsV1DaemonSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1DeploymentForAllNamespaces', function() {
      it('should call listAppsV1DeploymentForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAppsV1DeploymentForAllNamespaces
        //instance.listAppsV1DeploymentForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1NamespacedControllerRevision', function() {
      it('should call listAppsV1NamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test listAppsV1NamespacedControllerRevision
        //instance.listAppsV1NamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1NamespacedDaemonSet', function() {
      it('should call listAppsV1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test listAppsV1NamespacedDaemonSet
        //instance.listAppsV1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1NamespacedDeployment', function() {
      it('should call listAppsV1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test listAppsV1NamespacedDeployment
        //instance.listAppsV1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1NamespacedReplicaSet', function() {
      it('should call listAppsV1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test listAppsV1NamespacedReplicaSet
        //instance.listAppsV1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1NamespacedStatefulSet', function() {
      it('should call listAppsV1NamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test listAppsV1NamespacedStatefulSet
        //instance.listAppsV1NamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1ReplicaSetForAllNamespaces', function() {
      it('should call listAppsV1ReplicaSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAppsV1ReplicaSetForAllNamespaces
        //instance.listAppsV1ReplicaSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAppsV1StatefulSetForAllNamespaces', function() {
      it('should call listAppsV1StatefulSetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listAppsV1StatefulSetForAllNamespaces
        //instance.listAppsV1StatefulSetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedControllerRevision', function() {
      it('should call patchAppsV1NamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedControllerRevision
        //instance.patchAppsV1NamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedDaemonSet', function() {
      it('should call patchAppsV1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedDaemonSet
        //instance.patchAppsV1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedDaemonSetStatus', function() {
      it('should call patchAppsV1NamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedDaemonSetStatus
        //instance.patchAppsV1NamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedDeployment', function() {
      it('should call patchAppsV1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedDeployment
        //instance.patchAppsV1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedDeploymentScale', function() {
      it('should call patchAppsV1NamespacedDeploymentScale successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedDeploymentScale
        //instance.patchAppsV1NamespacedDeploymentScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedDeploymentStatus', function() {
      it('should call patchAppsV1NamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedDeploymentStatus
        //instance.patchAppsV1NamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedReplicaSet', function() {
      it('should call patchAppsV1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedReplicaSet
        //instance.patchAppsV1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedReplicaSetScale', function() {
      it('should call patchAppsV1NamespacedReplicaSetScale successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedReplicaSetScale
        //instance.patchAppsV1NamespacedReplicaSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedReplicaSetStatus', function() {
      it('should call patchAppsV1NamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedReplicaSetStatus
        //instance.patchAppsV1NamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedStatefulSet', function() {
      it('should call patchAppsV1NamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedStatefulSet
        //instance.patchAppsV1NamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedStatefulSetScale', function() {
      it('should call patchAppsV1NamespacedStatefulSetScale successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedStatefulSetScale
        //instance.patchAppsV1NamespacedStatefulSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchAppsV1NamespacedStatefulSetStatus', function() {
      it('should call patchAppsV1NamespacedStatefulSetStatus successfully', function(done) {
        //uncomment below and update the code to test patchAppsV1NamespacedStatefulSetStatus
        //instance.patchAppsV1NamespacedStatefulSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedControllerRevision', function() {
      it('should call readAppsV1NamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedControllerRevision
        //instance.readAppsV1NamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedDaemonSet', function() {
      it('should call readAppsV1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedDaemonSet
        //instance.readAppsV1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedDaemonSetStatus', function() {
      it('should call readAppsV1NamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedDaemonSetStatus
        //instance.readAppsV1NamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedDeployment', function() {
      it('should call readAppsV1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedDeployment
        //instance.readAppsV1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedDeploymentScale', function() {
      it('should call readAppsV1NamespacedDeploymentScale successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedDeploymentScale
        //instance.readAppsV1NamespacedDeploymentScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedDeploymentStatus', function() {
      it('should call readAppsV1NamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedDeploymentStatus
        //instance.readAppsV1NamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedReplicaSet', function() {
      it('should call readAppsV1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedReplicaSet
        //instance.readAppsV1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedReplicaSetScale', function() {
      it('should call readAppsV1NamespacedReplicaSetScale successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedReplicaSetScale
        //instance.readAppsV1NamespacedReplicaSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedReplicaSetStatus', function() {
      it('should call readAppsV1NamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedReplicaSetStatus
        //instance.readAppsV1NamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedStatefulSet', function() {
      it('should call readAppsV1NamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedStatefulSet
        //instance.readAppsV1NamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedStatefulSetScale', function() {
      it('should call readAppsV1NamespacedStatefulSetScale successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedStatefulSetScale
        //instance.readAppsV1NamespacedStatefulSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readAppsV1NamespacedStatefulSetStatus', function() {
      it('should call readAppsV1NamespacedStatefulSetStatus successfully', function(done) {
        //uncomment below and update the code to test readAppsV1NamespacedStatefulSetStatus
        //instance.readAppsV1NamespacedStatefulSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedControllerRevision', function() {
      it('should call replaceAppsV1NamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedControllerRevision
        //instance.replaceAppsV1NamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedDaemonSet', function() {
      it('should call replaceAppsV1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedDaemonSet
        //instance.replaceAppsV1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedDaemonSetStatus', function() {
      it('should call replaceAppsV1NamespacedDaemonSetStatus successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedDaemonSetStatus
        //instance.replaceAppsV1NamespacedDaemonSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedDeployment', function() {
      it('should call replaceAppsV1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedDeployment
        //instance.replaceAppsV1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedDeploymentScale', function() {
      it('should call replaceAppsV1NamespacedDeploymentScale successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedDeploymentScale
        //instance.replaceAppsV1NamespacedDeploymentScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedDeploymentStatus', function() {
      it('should call replaceAppsV1NamespacedDeploymentStatus successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedDeploymentStatus
        //instance.replaceAppsV1NamespacedDeploymentStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedReplicaSet', function() {
      it('should call replaceAppsV1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedReplicaSet
        //instance.replaceAppsV1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedReplicaSetScale', function() {
      it('should call replaceAppsV1NamespacedReplicaSetScale successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedReplicaSetScale
        //instance.replaceAppsV1NamespacedReplicaSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedReplicaSetStatus', function() {
      it('should call replaceAppsV1NamespacedReplicaSetStatus successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedReplicaSetStatus
        //instance.replaceAppsV1NamespacedReplicaSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedStatefulSet', function() {
      it('should call replaceAppsV1NamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedStatefulSet
        //instance.replaceAppsV1NamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedStatefulSetScale', function() {
      it('should call replaceAppsV1NamespacedStatefulSetScale successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedStatefulSetScale
        //instance.replaceAppsV1NamespacedStatefulSetScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceAppsV1NamespacedStatefulSetStatus', function() {
      it('should call replaceAppsV1NamespacedStatefulSetStatus successfully', function(done) {
        //uncomment below and update the code to test replaceAppsV1NamespacedStatefulSetStatus
        //instance.replaceAppsV1NamespacedStatefulSetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1ControllerRevisionListForAllNamespaces', function() {
      it('should call watchAppsV1ControllerRevisionListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1ControllerRevisionListForAllNamespaces
        //instance.watchAppsV1ControllerRevisionListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1DaemonSetListForAllNamespaces', function() {
      it('should call watchAppsV1DaemonSetListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1DaemonSetListForAllNamespaces
        //instance.watchAppsV1DaemonSetListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1DeploymentListForAllNamespaces', function() {
      it('should call watchAppsV1DeploymentListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1DeploymentListForAllNamespaces
        //instance.watchAppsV1DeploymentListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedControllerRevision', function() {
      it('should call watchAppsV1NamespacedControllerRevision successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedControllerRevision
        //instance.watchAppsV1NamespacedControllerRevision(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedControllerRevisionList', function() {
      it('should call watchAppsV1NamespacedControllerRevisionList successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedControllerRevisionList
        //instance.watchAppsV1NamespacedControllerRevisionList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedDaemonSet', function() {
      it('should call watchAppsV1NamespacedDaemonSet successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedDaemonSet
        //instance.watchAppsV1NamespacedDaemonSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedDaemonSetList', function() {
      it('should call watchAppsV1NamespacedDaemonSetList successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedDaemonSetList
        //instance.watchAppsV1NamespacedDaemonSetList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedDeployment', function() {
      it('should call watchAppsV1NamespacedDeployment successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedDeployment
        //instance.watchAppsV1NamespacedDeployment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedDeploymentList', function() {
      it('should call watchAppsV1NamespacedDeploymentList successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedDeploymentList
        //instance.watchAppsV1NamespacedDeploymentList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedReplicaSet', function() {
      it('should call watchAppsV1NamespacedReplicaSet successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedReplicaSet
        //instance.watchAppsV1NamespacedReplicaSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedReplicaSetList', function() {
      it('should call watchAppsV1NamespacedReplicaSetList successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedReplicaSetList
        //instance.watchAppsV1NamespacedReplicaSetList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedStatefulSet', function() {
      it('should call watchAppsV1NamespacedStatefulSet successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedStatefulSet
        //instance.watchAppsV1NamespacedStatefulSet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1NamespacedStatefulSetList', function() {
      it('should call watchAppsV1NamespacedStatefulSetList successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1NamespacedStatefulSetList
        //instance.watchAppsV1NamespacedStatefulSetList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1ReplicaSetListForAllNamespaces', function() {
      it('should call watchAppsV1ReplicaSetListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1ReplicaSetListForAllNamespaces
        //instance.watchAppsV1ReplicaSetListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchAppsV1StatefulSetListForAllNamespaces', function() {
      it('should call watchAppsV1StatefulSetListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchAppsV1StatefulSetListForAllNamespaces
        //instance.watchAppsV1StatefulSetListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
