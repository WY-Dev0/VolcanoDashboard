/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.FlowcontrolApiserverV1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FlowcontrolApiserverV1Api', function() {
    describe('createFlowcontrolApiserverV1FlowSchema', function() {
      it('should call createFlowcontrolApiserverV1FlowSchema successfully', function(done) {
        //uncomment below and update the code to test createFlowcontrolApiserverV1FlowSchema
        //instance.createFlowcontrolApiserverV1FlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFlowcontrolApiserverV1PriorityLevelConfiguration', function() {
      it('should call createFlowcontrolApiserverV1PriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test createFlowcontrolApiserverV1PriorityLevelConfiguration
        //instance.createFlowcontrolApiserverV1PriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFlowcontrolApiserverV1CollectionFlowSchema', function() {
      it('should call deleteFlowcontrolApiserverV1CollectionFlowSchema successfully', function(done) {
        //uncomment below and update the code to test deleteFlowcontrolApiserverV1CollectionFlowSchema
        //instance.deleteFlowcontrolApiserverV1CollectionFlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFlowcontrolApiserverV1CollectionPriorityLevelConfiguration', function() {
      it('should call deleteFlowcontrolApiserverV1CollectionPriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteFlowcontrolApiserverV1CollectionPriorityLevelConfiguration
        //instance.deleteFlowcontrolApiserverV1CollectionPriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFlowcontrolApiserverV1FlowSchema', function() {
      it('should call deleteFlowcontrolApiserverV1FlowSchema successfully', function(done) {
        //uncomment below and update the code to test deleteFlowcontrolApiserverV1FlowSchema
        //instance.deleteFlowcontrolApiserverV1FlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFlowcontrolApiserverV1PriorityLevelConfiguration', function() {
      it('should call deleteFlowcontrolApiserverV1PriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test deleteFlowcontrolApiserverV1PriorityLevelConfiguration
        //instance.deleteFlowcontrolApiserverV1PriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFlowcontrolApiserverV1APIResources', function() {
      it('should call getFlowcontrolApiserverV1APIResources successfully', function(done) {
        //uncomment below and update the code to test getFlowcontrolApiserverV1APIResources
        //instance.getFlowcontrolApiserverV1APIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFlowcontrolApiserverV1FlowSchema', function() {
      it('should call listFlowcontrolApiserverV1FlowSchema successfully', function(done) {
        //uncomment below and update the code to test listFlowcontrolApiserverV1FlowSchema
        //instance.listFlowcontrolApiserverV1FlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listFlowcontrolApiserverV1PriorityLevelConfiguration', function() {
      it('should call listFlowcontrolApiserverV1PriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test listFlowcontrolApiserverV1PriorityLevelConfiguration
        //instance.listFlowcontrolApiserverV1PriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchFlowcontrolApiserverV1FlowSchema', function() {
      it('should call patchFlowcontrolApiserverV1FlowSchema successfully', function(done) {
        //uncomment below and update the code to test patchFlowcontrolApiserverV1FlowSchema
        //instance.patchFlowcontrolApiserverV1FlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchFlowcontrolApiserverV1FlowSchemaStatus', function() {
      it('should call patchFlowcontrolApiserverV1FlowSchemaStatus successfully', function(done) {
        //uncomment below and update the code to test patchFlowcontrolApiserverV1FlowSchemaStatus
        //instance.patchFlowcontrolApiserverV1FlowSchemaStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchFlowcontrolApiserverV1PriorityLevelConfiguration', function() {
      it('should call patchFlowcontrolApiserverV1PriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test patchFlowcontrolApiserverV1PriorityLevelConfiguration
        //instance.patchFlowcontrolApiserverV1PriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchFlowcontrolApiserverV1PriorityLevelConfigurationStatus', function() {
      it('should call patchFlowcontrolApiserverV1PriorityLevelConfigurationStatus successfully', function(done) {
        //uncomment below and update the code to test patchFlowcontrolApiserverV1PriorityLevelConfigurationStatus
        //instance.patchFlowcontrolApiserverV1PriorityLevelConfigurationStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readFlowcontrolApiserverV1FlowSchema', function() {
      it('should call readFlowcontrolApiserverV1FlowSchema successfully', function(done) {
        //uncomment below and update the code to test readFlowcontrolApiserverV1FlowSchema
        //instance.readFlowcontrolApiserverV1FlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readFlowcontrolApiserverV1FlowSchemaStatus', function() {
      it('should call readFlowcontrolApiserverV1FlowSchemaStatus successfully', function(done) {
        //uncomment below and update the code to test readFlowcontrolApiserverV1FlowSchemaStatus
        //instance.readFlowcontrolApiserverV1FlowSchemaStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readFlowcontrolApiserverV1PriorityLevelConfiguration', function() {
      it('should call readFlowcontrolApiserverV1PriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test readFlowcontrolApiserverV1PriorityLevelConfiguration
        //instance.readFlowcontrolApiserverV1PriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readFlowcontrolApiserverV1PriorityLevelConfigurationStatus', function() {
      it('should call readFlowcontrolApiserverV1PriorityLevelConfigurationStatus successfully', function(done) {
        //uncomment below and update the code to test readFlowcontrolApiserverV1PriorityLevelConfigurationStatus
        //instance.readFlowcontrolApiserverV1PriorityLevelConfigurationStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceFlowcontrolApiserverV1FlowSchema', function() {
      it('should call replaceFlowcontrolApiserverV1FlowSchema successfully', function(done) {
        //uncomment below and update the code to test replaceFlowcontrolApiserverV1FlowSchema
        //instance.replaceFlowcontrolApiserverV1FlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceFlowcontrolApiserverV1FlowSchemaStatus', function() {
      it('should call replaceFlowcontrolApiserverV1FlowSchemaStatus successfully', function(done) {
        //uncomment below and update the code to test replaceFlowcontrolApiserverV1FlowSchemaStatus
        //instance.replaceFlowcontrolApiserverV1FlowSchemaStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceFlowcontrolApiserverV1PriorityLevelConfiguration', function() {
      it('should call replaceFlowcontrolApiserverV1PriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test replaceFlowcontrolApiserverV1PriorityLevelConfiguration
        //instance.replaceFlowcontrolApiserverV1PriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceFlowcontrolApiserverV1PriorityLevelConfigurationStatus', function() {
      it('should call replaceFlowcontrolApiserverV1PriorityLevelConfigurationStatus successfully', function(done) {
        //uncomment below and update the code to test replaceFlowcontrolApiserverV1PriorityLevelConfigurationStatus
        //instance.replaceFlowcontrolApiserverV1PriorityLevelConfigurationStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchFlowcontrolApiserverV1FlowSchema', function() {
      it('should call watchFlowcontrolApiserverV1FlowSchema successfully', function(done) {
        //uncomment below and update the code to test watchFlowcontrolApiserverV1FlowSchema
        //instance.watchFlowcontrolApiserverV1FlowSchema(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchFlowcontrolApiserverV1FlowSchemaList', function() {
      it('should call watchFlowcontrolApiserverV1FlowSchemaList successfully', function(done) {
        //uncomment below and update the code to test watchFlowcontrolApiserverV1FlowSchemaList
        //instance.watchFlowcontrolApiserverV1FlowSchemaList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchFlowcontrolApiserverV1PriorityLevelConfiguration', function() {
      it('should call watchFlowcontrolApiserverV1PriorityLevelConfiguration successfully', function(done) {
        //uncomment below and update the code to test watchFlowcontrolApiserverV1PriorityLevelConfiguration
        //instance.watchFlowcontrolApiserverV1PriorityLevelConfiguration(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchFlowcontrolApiserverV1PriorityLevelConfigurationList', function() {
      it('should call watchFlowcontrolApiserverV1PriorityLevelConfigurationList successfully', function(done) {
        //uncomment below and update the code to test watchFlowcontrolApiserverV1PriorityLevelConfigurationList
        //instance.watchFlowcontrolApiserverV1PriorityLevelConfigurationList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
