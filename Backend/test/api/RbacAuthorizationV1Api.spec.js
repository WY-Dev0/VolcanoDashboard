/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.RbacAuthorizationV1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RbacAuthorizationV1Api', function() {
    describe('createRbacAuthorizationV1ClusterRole', function() {
      it('should call createRbacAuthorizationV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1ClusterRole
        //instance.createRbacAuthorizationV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRbacAuthorizationV1ClusterRoleBinding', function() {
      it('should call createRbacAuthorizationV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1ClusterRoleBinding
        //instance.createRbacAuthorizationV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRbacAuthorizationV1NamespacedRole', function() {
      it('should call createRbacAuthorizationV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1NamespacedRole
        //instance.createRbacAuthorizationV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRbacAuthorizationV1NamespacedRoleBinding', function() {
      it('should call createRbacAuthorizationV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test createRbacAuthorizationV1NamespacedRoleBinding
        //instance.createRbacAuthorizationV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1ClusterRole', function() {
      it('should call deleteRbacAuthorizationV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1ClusterRole
        //instance.deleteRbacAuthorizationV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1ClusterRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1ClusterRoleBinding
        //instance.deleteRbacAuthorizationV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1CollectionClusterRole', function() {
      it('should call deleteRbacAuthorizationV1CollectionClusterRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1CollectionClusterRole
        //instance.deleteRbacAuthorizationV1CollectionClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1CollectionClusterRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1CollectionClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1CollectionClusterRoleBinding
        //instance.deleteRbacAuthorizationV1CollectionClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1CollectionNamespacedRole', function() {
      it('should call deleteRbacAuthorizationV1CollectionNamespacedRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1CollectionNamespacedRole
        //instance.deleteRbacAuthorizationV1CollectionNamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1CollectionNamespacedRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1CollectionNamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1CollectionNamespacedRoleBinding
        //instance.deleteRbacAuthorizationV1CollectionNamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1NamespacedRole', function() {
      it('should call deleteRbacAuthorizationV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1NamespacedRole
        //instance.deleteRbacAuthorizationV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRbacAuthorizationV1NamespacedRoleBinding', function() {
      it('should call deleteRbacAuthorizationV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test deleteRbacAuthorizationV1NamespacedRoleBinding
        //instance.deleteRbacAuthorizationV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRbacAuthorizationV1APIResources', function() {
      it('should call getRbacAuthorizationV1APIResources successfully', function(done) {
        //uncomment below and update the code to test getRbacAuthorizationV1APIResources
        //instance.getRbacAuthorizationV1APIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1ClusterRole', function() {
      it('should call listRbacAuthorizationV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1ClusterRole
        //instance.listRbacAuthorizationV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1ClusterRoleBinding', function() {
      it('should call listRbacAuthorizationV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1ClusterRoleBinding
        //instance.listRbacAuthorizationV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1NamespacedRole', function() {
      it('should call listRbacAuthorizationV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1NamespacedRole
        //instance.listRbacAuthorizationV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1NamespacedRoleBinding', function() {
      it('should call listRbacAuthorizationV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1NamespacedRoleBinding
        //instance.listRbacAuthorizationV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1RoleBindingForAllNamespaces', function() {
      it('should call listRbacAuthorizationV1RoleBindingForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1RoleBindingForAllNamespaces
        //instance.listRbacAuthorizationV1RoleBindingForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRbacAuthorizationV1RoleForAllNamespaces', function() {
      it('should call listRbacAuthorizationV1RoleForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listRbacAuthorizationV1RoleForAllNamespaces
        //instance.listRbacAuthorizationV1RoleForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1ClusterRole', function() {
      it('should call patchRbacAuthorizationV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1ClusterRole
        //instance.patchRbacAuthorizationV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1ClusterRoleBinding', function() {
      it('should call patchRbacAuthorizationV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1ClusterRoleBinding
        //instance.patchRbacAuthorizationV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1NamespacedRole', function() {
      it('should call patchRbacAuthorizationV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1NamespacedRole
        //instance.patchRbacAuthorizationV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchRbacAuthorizationV1NamespacedRoleBinding', function() {
      it('should call patchRbacAuthorizationV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test patchRbacAuthorizationV1NamespacedRoleBinding
        //instance.patchRbacAuthorizationV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1ClusterRole', function() {
      it('should call readRbacAuthorizationV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1ClusterRole
        //instance.readRbacAuthorizationV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1ClusterRoleBinding', function() {
      it('should call readRbacAuthorizationV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1ClusterRoleBinding
        //instance.readRbacAuthorizationV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1NamespacedRole', function() {
      it('should call readRbacAuthorizationV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1NamespacedRole
        //instance.readRbacAuthorizationV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readRbacAuthorizationV1NamespacedRoleBinding', function() {
      it('should call readRbacAuthorizationV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test readRbacAuthorizationV1NamespacedRoleBinding
        //instance.readRbacAuthorizationV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1ClusterRole', function() {
      it('should call replaceRbacAuthorizationV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1ClusterRole
        //instance.replaceRbacAuthorizationV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1ClusterRoleBinding', function() {
      it('should call replaceRbacAuthorizationV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1ClusterRoleBinding
        //instance.replaceRbacAuthorizationV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1NamespacedRole', function() {
      it('should call replaceRbacAuthorizationV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1NamespacedRole
        //instance.replaceRbacAuthorizationV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceRbacAuthorizationV1NamespacedRoleBinding', function() {
      it('should call replaceRbacAuthorizationV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test replaceRbacAuthorizationV1NamespacedRoleBinding
        //instance.replaceRbacAuthorizationV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1ClusterRole', function() {
      it('should call watchRbacAuthorizationV1ClusterRole successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1ClusterRole
        //instance.watchRbacAuthorizationV1ClusterRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1ClusterRoleBinding', function() {
      it('should call watchRbacAuthorizationV1ClusterRoleBinding successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1ClusterRoleBinding
        //instance.watchRbacAuthorizationV1ClusterRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1ClusterRoleBindingList', function() {
      it('should call watchRbacAuthorizationV1ClusterRoleBindingList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1ClusterRoleBindingList
        //instance.watchRbacAuthorizationV1ClusterRoleBindingList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1ClusterRoleList', function() {
      it('should call watchRbacAuthorizationV1ClusterRoleList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1ClusterRoleList
        //instance.watchRbacAuthorizationV1ClusterRoleList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1NamespacedRole', function() {
      it('should call watchRbacAuthorizationV1NamespacedRole successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1NamespacedRole
        //instance.watchRbacAuthorizationV1NamespacedRole(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1NamespacedRoleBinding', function() {
      it('should call watchRbacAuthorizationV1NamespacedRoleBinding successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1NamespacedRoleBinding
        //instance.watchRbacAuthorizationV1NamespacedRoleBinding(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1NamespacedRoleBindingList', function() {
      it('should call watchRbacAuthorizationV1NamespacedRoleBindingList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1NamespacedRoleBindingList
        //instance.watchRbacAuthorizationV1NamespacedRoleBindingList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1NamespacedRoleList', function() {
      it('should call watchRbacAuthorizationV1NamespacedRoleList successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1NamespacedRoleList
        //instance.watchRbacAuthorizationV1NamespacedRoleList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1RoleBindingListForAllNamespaces', function() {
      it('should call watchRbacAuthorizationV1RoleBindingListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1RoleBindingListForAllNamespaces
        //instance.watchRbacAuthorizationV1RoleBindingListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchRbacAuthorizationV1RoleListForAllNamespaces', function() {
      it('should call watchRbacAuthorizationV1RoleListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchRbacAuthorizationV1RoleListForAllNamespaces
        //instance.watchRbacAuthorizationV1RoleListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
