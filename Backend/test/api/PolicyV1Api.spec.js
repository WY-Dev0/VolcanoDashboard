/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.PolicyV1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PolicyV1Api', function() {
    describe('createPolicyV1NamespacedPodDisruptionBudget', function() {
      it('should call createPolicyV1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test createPolicyV1NamespacedPodDisruptionBudget
        //instance.createPolicyV1NamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePolicyV1CollectionNamespacedPodDisruptionBudget', function() {
      it('should call deletePolicyV1CollectionNamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test deletePolicyV1CollectionNamespacedPodDisruptionBudget
        //instance.deletePolicyV1CollectionNamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePolicyV1NamespacedPodDisruptionBudget', function() {
      it('should call deletePolicyV1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test deletePolicyV1NamespacedPodDisruptionBudget
        //instance.deletePolicyV1NamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPolicyV1APIResources', function() {
      it('should call getPolicyV1APIResources successfully', function(done) {
        //uncomment below and update the code to test getPolicyV1APIResources
        //instance.getPolicyV1APIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPolicyV1NamespacedPodDisruptionBudget', function() {
      it('should call listPolicyV1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test listPolicyV1NamespacedPodDisruptionBudget
        //instance.listPolicyV1NamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPolicyV1PodDisruptionBudgetForAllNamespaces', function() {
      it('should call listPolicyV1PodDisruptionBudgetForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test listPolicyV1PodDisruptionBudgetForAllNamespaces
        //instance.listPolicyV1PodDisruptionBudgetForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchPolicyV1NamespacedPodDisruptionBudget', function() {
      it('should call patchPolicyV1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test patchPolicyV1NamespacedPodDisruptionBudget
        //instance.patchPolicyV1NamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchPolicyV1NamespacedPodDisruptionBudgetStatus', function() {
      it('should call patchPolicyV1NamespacedPodDisruptionBudgetStatus successfully', function(done) {
        //uncomment below and update the code to test patchPolicyV1NamespacedPodDisruptionBudgetStatus
        //instance.patchPolicyV1NamespacedPodDisruptionBudgetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readPolicyV1NamespacedPodDisruptionBudget', function() {
      it('should call readPolicyV1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test readPolicyV1NamespacedPodDisruptionBudget
        //instance.readPolicyV1NamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readPolicyV1NamespacedPodDisruptionBudgetStatus', function() {
      it('should call readPolicyV1NamespacedPodDisruptionBudgetStatus successfully', function(done) {
        //uncomment below and update the code to test readPolicyV1NamespacedPodDisruptionBudgetStatus
        //instance.readPolicyV1NamespacedPodDisruptionBudgetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replacePolicyV1NamespacedPodDisruptionBudget', function() {
      it('should call replacePolicyV1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test replacePolicyV1NamespacedPodDisruptionBudget
        //instance.replacePolicyV1NamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replacePolicyV1NamespacedPodDisruptionBudgetStatus', function() {
      it('should call replacePolicyV1NamespacedPodDisruptionBudgetStatus successfully', function(done) {
        //uncomment below and update the code to test replacePolicyV1NamespacedPodDisruptionBudgetStatus
        //instance.replacePolicyV1NamespacedPodDisruptionBudgetStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchPolicyV1NamespacedPodDisruptionBudget', function() {
      it('should call watchPolicyV1NamespacedPodDisruptionBudget successfully', function(done) {
        //uncomment below and update the code to test watchPolicyV1NamespacedPodDisruptionBudget
        //instance.watchPolicyV1NamespacedPodDisruptionBudget(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchPolicyV1NamespacedPodDisruptionBudgetList', function() {
      it('should call watchPolicyV1NamespacedPodDisruptionBudgetList successfully', function(done) {
        //uncomment below and update the code to test watchPolicyV1NamespacedPodDisruptionBudgetList
        //instance.watchPolicyV1NamespacedPodDisruptionBudgetList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchPolicyV1PodDisruptionBudgetListForAllNamespaces', function() {
      it('should call watchPolicyV1PodDisruptionBudgetListForAllNamespaces successfully', function(done) {
        //uncomment below and update the code to test watchPolicyV1PodDisruptionBudgetListForAllNamespaces
        //instance.watchPolicyV1PodDisruptionBudgetListForAllNamespaces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
