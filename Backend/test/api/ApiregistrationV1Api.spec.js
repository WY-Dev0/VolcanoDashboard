/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Kubernetes);
  }
}(this, function(expect, Kubernetes) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Kubernetes.ApiregistrationV1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiregistrationV1Api', function() {
    describe('createApiregistrationV1APIService', function() {
      it('should call createApiregistrationV1APIService successfully', function(done) {
        //uncomment below and update the code to test createApiregistrationV1APIService
        //instance.createApiregistrationV1APIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApiregistrationV1APIService', function() {
      it('should call deleteApiregistrationV1APIService successfully', function(done) {
        //uncomment below and update the code to test deleteApiregistrationV1APIService
        //instance.deleteApiregistrationV1APIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteApiregistrationV1CollectionAPIService', function() {
      it('should call deleteApiregistrationV1CollectionAPIService successfully', function(done) {
        //uncomment below and update the code to test deleteApiregistrationV1CollectionAPIService
        //instance.deleteApiregistrationV1CollectionAPIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getApiregistrationV1APIResources', function() {
      it('should call getApiregistrationV1APIResources successfully', function(done) {
        //uncomment below and update the code to test getApiregistrationV1APIResources
        //instance.getApiregistrationV1APIResources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listApiregistrationV1APIService', function() {
      it('should call listApiregistrationV1APIService successfully', function(done) {
        //uncomment below and update the code to test listApiregistrationV1APIService
        //instance.listApiregistrationV1APIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchApiregistrationV1APIService', function() {
      it('should call patchApiregistrationV1APIService successfully', function(done) {
        //uncomment below and update the code to test patchApiregistrationV1APIService
        //instance.patchApiregistrationV1APIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchApiregistrationV1APIServiceStatus', function() {
      it('should call patchApiregistrationV1APIServiceStatus successfully', function(done) {
        //uncomment below and update the code to test patchApiregistrationV1APIServiceStatus
        //instance.patchApiregistrationV1APIServiceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readApiregistrationV1APIService', function() {
      it('should call readApiregistrationV1APIService successfully', function(done) {
        //uncomment below and update the code to test readApiregistrationV1APIService
        //instance.readApiregistrationV1APIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readApiregistrationV1APIServiceStatus', function() {
      it('should call readApiregistrationV1APIServiceStatus successfully', function(done) {
        //uncomment below and update the code to test readApiregistrationV1APIServiceStatus
        //instance.readApiregistrationV1APIServiceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceApiregistrationV1APIService', function() {
      it('should call replaceApiregistrationV1APIService successfully', function(done) {
        //uncomment below and update the code to test replaceApiregistrationV1APIService
        //instance.replaceApiregistrationV1APIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('replaceApiregistrationV1APIServiceStatus', function() {
      it('should call replaceApiregistrationV1APIServiceStatus successfully', function(done) {
        //uncomment below and update the code to test replaceApiregistrationV1APIServiceStatus
        //instance.replaceApiregistrationV1APIServiceStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchApiregistrationV1APIService', function() {
      it('should call watchApiregistrationV1APIService successfully', function(done) {
        //uncomment below and update the code to test watchApiregistrationV1APIService
        //instance.watchApiregistrationV1APIService(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('watchApiregistrationV1APIServiceList', function() {
      it('should call watchApiregistrationV1APIServiceList successfully', function(done) {
        //uncomment below and update the code to test watchApiregistrationV1APIServiceList
        //instance.watchApiregistrationV1APIServiceList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
