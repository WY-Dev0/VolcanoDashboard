/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiNetworkingV1NetworkPolicyPort model module.
 * @module model/IoK8sApiNetworkingV1NetworkPolicyPort
 * @version v1.30.0
 */
class IoK8sApiNetworkingV1NetworkPolicyPort {
    /**
     * Constructs a new <code>IoK8sApiNetworkingV1NetworkPolicyPort</code>.
     * NetworkPolicyPort describes a port to allow traffic on
     * @alias module:model/IoK8sApiNetworkingV1NetworkPolicyPort
     */
    constructor() { 
        
        IoK8sApiNetworkingV1NetworkPolicyPort.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiNetworkingV1NetworkPolicyPort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiNetworkingV1NetworkPolicyPort} obj Optional instance to populate.
     * @return {module:model/IoK8sApiNetworkingV1NetworkPolicyPort} The populated <code>IoK8sApiNetworkingV1NetworkPolicyPort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiNetworkingV1NetworkPolicyPort();

            if (data.hasOwnProperty('endPort')) {
                obj['endPort'] = ApiClient.convertToType(data['endPort'], 'Number');
            }
            if (data.hasOwnProperty('port')) {
                obj['port'] = ApiClient.convertToType(data['port'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiNetworkingV1NetworkPolicyPort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiNetworkingV1NetworkPolicyPort</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['port'] && !(typeof data['port'] === 'string' || data['port'] instanceof String)) {
            throw new Error("Expected the field `port` to be a primitive type in the JSON string but got " + data['port']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }

        return true;
    }


}



/**
 * endPort indicates that the range of ports from port to endPort if set, inclusive, should be allowed by the policy. This field cannot be defined if the port field is not defined or if the port field is defined as a named (string) port. The endPort must be equal or greater than port.
 * @member {Number} endPort
 */
IoK8sApiNetworkingV1NetworkPolicyPort.prototype['endPort'] = undefined;

/**
 * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
 * @member {String} port
 */
IoK8sApiNetworkingV1NetworkPolicyPort.prototype['port'] = undefined;

/**
 * protocol represents the protocol (TCP, UDP, or SCTP) which traffic must match. If not specified, this field defaults to TCP.  Possible enum values:  - `\"SCTP\"` is the SCTP protocol.  - `\"TCP\"` is the TCP protocol.  - `\"UDP\"` is the UDP protocol.
 * @member {module:model/IoK8sApiNetworkingV1NetworkPolicyPort.ProtocolEnum} protocol
 */
IoK8sApiNetworkingV1NetworkPolicyPort.prototype['protocol'] = undefined;





/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiNetworkingV1NetworkPolicyPort['ProtocolEnum'] = {

    /**
     * value: "SCTP"
     * @const
     */
    "SCTP": "SCTP",

    /**
     * value: "TCP"
     * @const
     */
    "TCP": "TCP",

    /**
     * value: "UDP"
     * @const
     */
    "UDP": "UDP"
};



export default IoK8sApiNetworkingV1NetworkPolicyPort;

