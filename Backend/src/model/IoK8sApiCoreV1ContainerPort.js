/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiCoreV1ContainerPort model module.
 * @module model/IoK8sApiCoreV1ContainerPort
 * @version v1.30.0
 */
class IoK8sApiCoreV1ContainerPort {
    /**
     * Constructs a new <code>IoK8sApiCoreV1ContainerPort</code>.
     * ContainerPort represents a network port in a single container.
     * @alias module:model/IoK8sApiCoreV1ContainerPort
     * @param containerPort {Number} Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
     */
    constructor(containerPort) { 
        
        IoK8sApiCoreV1ContainerPort.initialize(this, containerPort);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, containerPort) { 
        obj['containerPort'] = containerPort;
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1ContainerPort</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1ContainerPort} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1ContainerPort} The populated <code>IoK8sApiCoreV1ContainerPort</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1ContainerPort();

            if (data.hasOwnProperty('containerPort')) {
                obj['containerPort'] = ApiClient.convertToType(data['containerPort'], 'Number');
            }
            if (data.hasOwnProperty('hostIP')) {
                obj['hostIP'] = ApiClient.convertToType(data['hostIP'], 'String');
            }
            if (data.hasOwnProperty('hostPort')) {
                obj['hostPort'] = ApiClient.convertToType(data['hostPort'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1ContainerPort</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1ContainerPort</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiCoreV1ContainerPort.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['hostIP'] && !(typeof data['hostIP'] === 'string' || data['hostIP'] instanceof String)) {
            throw new Error("Expected the field `hostIP` to be a primitive type in the JSON string but got " + data['hostIP']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }

        return true;
    }


}

IoK8sApiCoreV1ContainerPort.RequiredProperties = ["containerPort"];

/**
 * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
 * @member {Number} containerPort
 */
IoK8sApiCoreV1ContainerPort.prototype['containerPort'] = undefined;

/**
 * What host IP to bind the external port to.
 * @member {String} hostIP
 */
IoK8sApiCoreV1ContainerPort.prototype['hostIP'] = undefined;

/**
 * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
 * @member {Number} hostPort
 */
IoK8sApiCoreV1ContainerPort.prototype['hostPort'] = undefined;

/**
 * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
 * @member {String} name
 */
IoK8sApiCoreV1ContainerPort.prototype['name'] = undefined;

/**
 * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".  Possible enum values:  - `\"SCTP\"` is the SCTP protocol.  - `\"TCP\"` is the TCP protocol.  - `\"UDP\"` is the UDP protocol.
 * @member {module:model/IoK8sApiCoreV1ContainerPort.ProtocolEnum} protocol
 */
IoK8sApiCoreV1ContainerPort.prototype['protocol'] = undefined;





/**
 * Allowed values for the <code>protocol</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiCoreV1ContainerPort['ProtocolEnum'] = {

    /**
     * value: "SCTP"
     * @const
     */
    "SCTP": "SCTP",

    /**
     * value: "TCP"
     * @const
     */
    "TCP": "TCP",

    /**
     * value: "UDP"
     * @const
     */
    "UDP": "UDP"
};



export default IoK8sApiCoreV1ContainerPort;

