/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration model module.
 * @module model/IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration
 * @version v1.30.0
 */
class IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration {
    /**
     * Constructs a new <code>IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration</code>.
     * ExemptPriorityLevelConfiguration describes the configurable aspects of the handling of exempt requests. In the mandatory exempt configuration object the values in the fields here can be modified by authorized users, unlike the rest of the &#x60;spec&#x60;.
     * @alias module:model/IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration
     */
    constructor() { 
        
        IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration} obj Optional instance to populate.
     * @return {module:model/IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration} The populated <code>IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration();

            if (data.hasOwnProperty('lendablePercent')) {
                obj['lendablePercent'] = ApiClient.convertToType(data['lendablePercent'], 'Number');
            }
            if (data.hasOwnProperty('nominalConcurrencyShares')) {
                obj['nominalConcurrencyShares'] = ApiClient.convertToType(data['nominalConcurrencyShares'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * `lendablePercent` prescribes the fraction of the level's NominalCL that can be borrowed by other priority levels.  This value of this field must be between 0 and 100, inclusive, and it defaults to 0. The number of seats that other levels can borrow from this level, known as this level's LendableConcurrencyLimit (LendableCL), is defined as follows.  LendableCL(i) = round( NominalCL(i) * lendablePercent(i)/100.0 )
 * @member {Number} lendablePercent
 */
IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration.prototype['lendablePercent'] = undefined;

/**
 * `nominalConcurrencyShares` (NCS) contributes to the computation of the NominalConcurrencyLimit (NominalCL) of this level. This is the number of execution seats nominally reserved for this priority level. This DOES NOT limit the dispatching from this priority level but affects the other priority levels through the borrowing mechanism. The server's concurrency limit (ServerCL) is divided among all the priority levels in proportion to their NCS values:  NominalCL(i)  = ceil( ServerCL * NCS(i) / sum_ncs ) sum_ncs = sum[priority level k] NCS(k)  Bigger numbers mean a larger nominal concurrency limit, at the expense of every other priority level. This field has a default value of zero.
 * @member {Number} nominalConcurrencyShares
 */
IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration.prototype['nominalConcurrencyShares'] = undefined;






export default IoK8sApiFlowcontrolV1ExemptPriorityLevelConfiguration;

