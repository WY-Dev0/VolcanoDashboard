/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShVolcanoBatchV1alpha1JobSpecPoliciesInner from './ShVolcanoBatchV1alpha1JobSpecPoliciesInner';
import ShVolcanoBatchV1alpha1JobSpecTasksInner from './ShVolcanoBatchV1alpha1JobSpecTasksInner';
import ShVolcanoBatchV1alpha1JobSpecVolumesInner from './ShVolcanoBatchV1alpha1JobSpecVolumesInner';

/**
 * The ShVolcanoBatchV1alpha1JobSpec model module.
 * @module model/ShVolcanoBatchV1alpha1JobSpec
 * @version v1.30.0
 */
class ShVolcanoBatchV1alpha1JobSpec {
    /**
     * Constructs a new <code>ShVolcanoBatchV1alpha1JobSpec</code>.
     * @alias module:model/ShVolcanoBatchV1alpha1JobSpec
     */
    constructor() { 
        
        ShVolcanoBatchV1alpha1JobSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShVolcanoBatchV1alpha1JobSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShVolcanoBatchV1alpha1JobSpec} obj Optional instance to populate.
     * @return {module:model/ShVolcanoBatchV1alpha1JobSpec} The populated <code>ShVolcanoBatchV1alpha1JobSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShVolcanoBatchV1alpha1JobSpec();

            if (data.hasOwnProperty('maxRetry')) {
                obj['maxRetry'] = ApiClient.convertToType(data['maxRetry'], 'Number');
            }
            if (data.hasOwnProperty('minAvailable')) {
                obj['minAvailable'] = ApiClient.convertToType(data['minAvailable'], 'Number');
            }
            if (data.hasOwnProperty('minSuccess')) {
                obj['minSuccess'] = ApiClient.convertToType(data['minSuccess'], 'Number');
            }
            if (data.hasOwnProperty('plugins')) {
                obj['plugins'] = ApiClient.convertToType(data['plugins'], {'String': ['String']});
            }
            if (data.hasOwnProperty('policies')) {
                obj['policies'] = ApiClient.convertToType(data['policies'], [ShVolcanoBatchV1alpha1JobSpecPoliciesInner]);
            }
            if (data.hasOwnProperty('priorityClassName')) {
                obj['priorityClassName'] = ApiClient.convertToType(data['priorityClassName'], 'String');
            }
            if (data.hasOwnProperty('queue')) {
                obj['queue'] = ApiClient.convertToType(data['queue'], 'String');
            }
            if (data.hasOwnProperty('runningEstimate')) {
                obj['runningEstimate'] = ApiClient.convertToType(data['runningEstimate'], 'String');
            }
            if (data.hasOwnProperty('schedulerName')) {
                obj['schedulerName'] = ApiClient.convertToType(data['schedulerName'], 'String');
            }
            if (data.hasOwnProperty('tasks')) {
                obj['tasks'] = ApiClient.convertToType(data['tasks'], [ShVolcanoBatchV1alpha1JobSpecTasksInner]);
            }
            if (data.hasOwnProperty('ttlSecondsAfterFinished')) {
                obj['ttlSecondsAfterFinished'] = ApiClient.convertToType(data['ttlSecondsAfterFinished'], 'Number');
            }
            if (data.hasOwnProperty('volumes')) {
                obj['volumes'] = ApiClient.convertToType(data['volumes'], [ShVolcanoBatchV1alpha1JobSpecVolumesInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShVolcanoBatchV1alpha1JobSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShVolcanoBatchV1alpha1JobSpec</code>.
     */
    static validateJSON(data) {
        if (data['policies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['policies'])) {
                throw new Error("Expected the field `policies` to be an array in the JSON data but got " + data['policies']);
            }
            // validate the optional field `policies` (array)
            for (const item of data['policies']) {
                ShVolcanoBatchV1alpha1JobSpecPoliciesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['priorityClassName'] && !(typeof data['priorityClassName'] === 'string' || data['priorityClassName'] instanceof String)) {
            throw new Error("Expected the field `priorityClassName` to be a primitive type in the JSON string but got " + data['priorityClassName']);
        }
        // ensure the json data is a string
        if (data['queue'] && !(typeof data['queue'] === 'string' || data['queue'] instanceof String)) {
            throw new Error("Expected the field `queue` to be a primitive type in the JSON string but got " + data['queue']);
        }
        // ensure the json data is a string
        if (data['runningEstimate'] && !(typeof data['runningEstimate'] === 'string' || data['runningEstimate'] instanceof String)) {
            throw new Error("Expected the field `runningEstimate` to be a primitive type in the JSON string but got " + data['runningEstimate']);
        }
        // ensure the json data is a string
        if (data['schedulerName'] && !(typeof data['schedulerName'] === 'string' || data['schedulerName'] instanceof String)) {
            throw new Error("Expected the field `schedulerName` to be a primitive type in the JSON string but got " + data['schedulerName']);
        }
        if (data['tasks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tasks'])) {
                throw new Error("Expected the field `tasks` to be an array in the JSON data but got " + data['tasks']);
            }
            // validate the optional field `tasks` (array)
            for (const item of data['tasks']) {
                ShVolcanoBatchV1alpha1JobSpecTasksInner.validateJSON(item);
            };
        }
        if (data['volumes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumes'])) {
                throw new Error("Expected the field `volumes` to be an array in the JSON data but got " + data['volumes']);
            }
            // validate the optional field `volumes` (array)
            for (const item of data['volumes']) {
                ShVolcanoBatchV1alpha1JobSpecVolumesInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} maxRetry
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['maxRetry'] = undefined;

/**
 * @member {Number} minAvailable
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['minAvailable'] = undefined;

/**
 * @member {Number} minSuccess
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['minSuccess'] = undefined;

/**
 * @member {Object.<String, Array.<String>>} plugins
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['plugins'] = undefined;

/**
 * @member {Array.<module:model/ShVolcanoBatchV1alpha1JobSpecPoliciesInner>} policies
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['policies'] = undefined;

/**
 * @member {String} priorityClassName
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['priorityClassName'] = undefined;

/**
 * @member {String} queue
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['queue'] = undefined;

/**
 * @member {String} runningEstimate
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['runningEstimate'] = undefined;

/**
 * @member {String} schedulerName
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['schedulerName'] = undefined;

/**
 * @member {Array.<module:model/ShVolcanoBatchV1alpha1JobSpecTasksInner>} tasks
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['tasks'] = undefined;

/**
 * @member {Number} ttlSecondsAfterFinished
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['ttlSecondsAfterFinished'] = undefined;

/**
 * @member {Array.<module:model/ShVolcanoBatchV1alpha1JobSpecVolumesInner>} volumes
 */
ShVolcanoBatchV1alpha1JobSpec.prototype['volumes'] = undefined;






export default ShVolcanoBatchV1alpha1JobSpec;

