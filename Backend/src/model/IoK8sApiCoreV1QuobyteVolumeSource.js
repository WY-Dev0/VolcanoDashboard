/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiCoreV1QuobyteVolumeSource model module.
 * @module model/IoK8sApiCoreV1QuobyteVolumeSource
 * @version v1.30.0
 */
class IoK8sApiCoreV1QuobyteVolumeSource {
    /**
     * Constructs a new <code>IoK8sApiCoreV1QuobyteVolumeSource</code>.
     * Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.
     * @alias module:model/IoK8sApiCoreV1QuobyteVolumeSource
     * @param registry {String} registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
     * @param volume {String} volume is a string that references an already created Quobyte volume by name.
     */
    constructor(registry, volume) { 
        
        IoK8sApiCoreV1QuobyteVolumeSource.initialize(this, registry, volume);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, registry, volume) { 
        obj['registry'] = registry;
        obj['volume'] = volume;
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1QuobyteVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1QuobyteVolumeSource} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1QuobyteVolumeSource} The populated <code>IoK8sApiCoreV1QuobyteVolumeSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1QuobyteVolumeSource();

            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('readOnly')) {
                obj['readOnly'] = ApiClient.convertToType(data['readOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('registry')) {
                obj['registry'] = ApiClient.convertToType(data['registry'], 'String');
            }
            if (data.hasOwnProperty('tenant')) {
                obj['tenant'] = ApiClient.convertToType(data['tenant'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('volume')) {
                obj['volume'] = ApiClient.convertToType(data['volume'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1QuobyteVolumeSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1QuobyteVolumeSource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiCoreV1QuobyteVolumeSource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is a string
        if (data['registry'] && !(typeof data['registry'] === 'string' || data['registry'] instanceof String)) {
            throw new Error("Expected the field `registry` to be a primitive type in the JSON string but got " + data['registry']);
        }
        // ensure the json data is a string
        if (data['tenant'] && !(typeof data['tenant'] === 'string' || data['tenant'] instanceof String)) {
            throw new Error("Expected the field `tenant` to be a primitive type in the JSON string but got " + data['tenant']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }
        // ensure the json data is a string
        if (data['volume'] && !(typeof data['volume'] === 'string' || data['volume'] instanceof String)) {
            throw new Error("Expected the field `volume` to be a primitive type in the JSON string but got " + data['volume']);
        }

        return true;
    }


}

IoK8sApiCoreV1QuobyteVolumeSource.RequiredProperties = ["registry", "volume"];

/**
 * group to map volume access to Default is no group
 * @member {String} group
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype['group'] = undefined;

/**
 * readOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
 * @member {Boolean} readOnly
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype['readOnly'] = undefined;

/**
 * registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
 * @member {String} registry
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype['registry'] = undefined;

/**
 * tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
 * @member {String} tenant
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype['tenant'] = undefined;

/**
 * user to map volume access to Defaults to serivceaccount user
 * @member {String} user
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype['user'] = undefined;

/**
 * volume is a string that references an already created Quobyte volume by name.
 * @member {String} volume
 */
IoK8sApiCoreV1QuobyteVolumeSource.prototype['volume'] = undefined;






export default IoK8sApiCoreV1QuobyteVolumeSource;

