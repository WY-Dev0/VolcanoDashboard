/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiCoreV1NodeConfigSource from './IoK8sApiCoreV1NodeConfigSource';

/**
 * The IoK8sApiCoreV1NodeConfigStatus model module.
 * @module model/IoK8sApiCoreV1NodeConfigStatus
 * @version v1.30.0
 */
class IoK8sApiCoreV1NodeConfigStatus {
    /**
     * Constructs a new <code>IoK8sApiCoreV1NodeConfigStatus</code>.
     * NodeConfigStatus describes the status of the config assigned by Node.Spec.ConfigSource.
     * @alias module:model/IoK8sApiCoreV1NodeConfigStatus
     */
    constructor() { 
        
        IoK8sApiCoreV1NodeConfigStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1NodeConfigStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1NodeConfigStatus} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1NodeConfigStatus} The populated <code>IoK8sApiCoreV1NodeConfigStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1NodeConfigStatus();

            if (data.hasOwnProperty('active')) {
                obj['active'] = IoK8sApiCoreV1NodeConfigSource.constructFromObject(data['active']);
            }
            if (data.hasOwnProperty('assigned')) {
                obj['assigned'] = IoK8sApiCoreV1NodeConfigSource.constructFromObject(data['assigned']);
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('lastKnownGood')) {
                obj['lastKnownGood'] = IoK8sApiCoreV1NodeConfigSource.constructFromObject(data['lastKnownGood']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1NodeConfigStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1NodeConfigStatus</code>.
     */
    static validateJSON(data) {
        // validate the optional field `active`
        if (data['active']) { // data not null
          IoK8sApiCoreV1NodeConfigSource.validateJSON(data['active']);
        }
        // validate the optional field `assigned`
        if (data['assigned']) { // data not null
          IoK8sApiCoreV1NodeConfigSource.validateJSON(data['assigned']);
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // validate the optional field `lastKnownGood`
        if (data['lastKnownGood']) { // data not null
          IoK8sApiCoreV1NodeConfigSource.validateJSON(data['lastKnownGood']);
        }

        return true;
    }


}



/**
 * @member {module:model/IoK8sApiCoreV1NodeConfigSource} active
 */
IoK8sApiCoreV1NodeConfigStatus.prototype['active'] = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1NodeConfigSource} assigned
 */
IoK8sApiCoreV1NodeConfigStatus.prototype['assigned'] = undefined;

/**
 * Error describes any problems reconciling the Spec.ConfigSource to the Active config. Errors may occur, for example, attempting to checkpoint Spec.ConfigSource to the local Assigned record, attempting to checkpoint the payload associated with Spec.ConfigSource, attempting to load or validate the Assigned config, etc. Errors may occur at different points while syncing config. Earlier errors (e.g. download or checkpointing errors) will not result in a rollback to LastKnownGood, and may resolve across Kubelet retries. Later errors (e.g. loading or validating a checkpointed config) will result in a rollback to LastKnownGood. In the latter case, it is usually possible to resolve the error by fixing the config assigned in Spec.ConfigSource. You can find additional information for debugging by searching the error message in the Kubelet log. Error is a human-readable description of the error state; machines can check whether or not Error is empty, but should not rely on the stability of the Error text across Kubelet versions.
 * @member {String} error
 */
IoK8sApiCoreV1NodeConfigStatus.prototype['error'] = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1NodeConfigSource} lastKnownGood
 */
IoK8sApiCoreV1NodeConfigStatus.prototype['lastKnownGood'] = undefined;






export default IoK8sApiCoreV1NodeConfigStatus;

