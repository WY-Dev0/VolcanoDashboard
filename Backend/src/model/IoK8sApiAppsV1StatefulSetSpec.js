/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiAppsV1StatefulSetOrdinals from './IoK8sApiAppsV1StatefulSetOrdinals';
import IoK8sApiAppsV1StatefulSetPersistentVolumeClaimRetentionPolicy from './IoK8sApiAppsV1StatefulSetPersistentVolumeClaimRetentionPolicy';
import IoK8sApiAppsV1StatefulSetUpdateStrategy from './IoK8sApiAppsV1StatefulSetUpdateStrategy';
import IoK8sApiCoreV1PersistentVolumeClaim from './IoK8sApiCoreV1PersistentVolumeClaim';
import IoK8sApiCoreV1PodTemplateSpec from './IoK8sApiCoreV1PodTemplateSpec';
import IoK8sApimachineryPkgApisMetaV1LabelSelector from './IoK8sApimachineryPkgApisMetaV1LabelSelector';

/**
 * The IoK8sApiAppsV1StatefulSetSpec model module.
 * @module model/IoK8sApiAppsV1StatefulSetSpec
 * @version v1.30.0
 */
class IoK8sApiAppsV1StatefulSetSpec {
    /**
     * Constructs a new <code>IoK8sApiAppsV1StatefulSetSpec</code>.
     * A StatefulSetSpec is the specification of a StatefulSet.
     * @alias module:model/IoK8sApiAppsV1StatefulSetSpec
     * @param selector {module:model/IoK8sApimachineryPkgApisMetaV1LabelSelector} 
     * @param serviceName {String} serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller.
     * @param template {module:model/IoK8sApiCoreV1PodTemplateSpec} 
     */
    constructor(selector, serviceName, template) { 
        
        IoK8sApiAppsV1StatefulSetSpec.initialize(this, selector, serviceName, template);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, selector, serviceName, template) { 
        obj['selector'] = selector;
        obj['serviceName'] = serviceName;
        obj['template'] = template;
    }

    /**
     * Constructs a <code>IoK8sApiAppsV1StatefulSetSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiAppsV1StatefulSetSpec} obj Optional instance to populate.
     * @return {module:model/IoK8sApiAppsV1StatefulSetSpec} The populated <code>IoK8sApiAppsV1StatefulSetSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiAppsV1StatefulSetSpec();

            if (data.hasOwnProperty('minReadySeconds')) {
                obj['minReadySeconds'] = ApiClient.convertToType(data['minReadySeconds'], 'Number');
            }
            if (data.hasOwnProperty('ordinals')) {
                obj['ordinals'] = IoK8sApiAppsV1StatefulSetOrdinals.constructFromObject(data['ordinals']);
            }
            if (data.hasOwnProperty('persistentVolumeClaimRetentionPolicy')) {
                obj['persistentVolumeClaimRetentionPolicy'] = IoK8sApiAppsV1StatefulSetPersistentVolumeClaimRetentionPolicy.constructFromObject(data['persistentVolumeClaimRetentionPolicy']);
            }
            if (data.hasOwnProperty('podManagementPolicy')) {
                obj['podManagementPolicy'] = ApiClient.convertToType(data['podManagementPolicy'], 'String');
            }
            if (data.hasOwnProperty('replicas')) {
                obj['replicas'] = ApiClient.convertToType(data['replicas'], 'Number');
            }
            if (data.hasOwnProperty('revisionHistoryLimit')) {
                obj['revisionHistoryLimit'] = ApiClient.convertToType(data['revisionHistoryLimit'], 'Number');
            }
            if (data.hasOwnProperty('selector')) {
                obj['selector'] = IoK8sApimachineryPkgApisMetaV1LabelSelector.constructFromObject(data['selector']);
            }
            if (data.hasOwnProperty('serviceName')) {
                obj['serviceName'] = ApiClient.convertToType(data['serviceName'], 'String');
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = IoK8sApiCoreV1PodTemplateSpec.constructFromObject(data['template']);
            }
            if (data.hasOwnProperty('updateStrategy')) {
                obj['updateStrategy'] = IoK8sApiAppsV1StatefulSetUpdateStrategy.constructFromObject(data['updateStrategy']);
            }
            if (data.hasOwnProperty('volumeClaimTemplates')) {
                obj['volumeClaimTemplates'] = ApiClient.convertToType(data['volumeClaimTemplates'], [IoK8sApiCoreV1PersistentVolumeClaim]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiAppsV1StatefulSetSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiAppsV1StatefulSetSpec</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiAppsV1StatefulSetSpec.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `ordinals`
        if (data['ordinals']) { // data not null
          IoK8sApiAppsV1StatefulSetOrdinals.validateJSON(data['ordinals']);
        }
        // validate the optional field `persistentVolumeClaimRetentionPolicy`
        if (data['persistentVolumeClaimRetentionPolicy']) { // data not null
          IoK8sApiAppsV1StatefulSetPersistentVolumeClaimRetentionPolicy.validateJSON(data['persistentVolumeClaimRetentionPolicy']);
        }
        // ensure the json data is a string
        if (data['podManagementPolicy'] && !(typeof data['podManagementPolicy'] === 'string' || data['podManagementPolicy'] instanceof String)) {
            throw new Error("Expected the field `podManagementPolicy` to be a primitive type in the JSON string but got " + data['podManagementPolicy']);
        }
        // validate the optional field `selector`
        if (data['selector']) { // data not null
          IoK8sApimachineryPkgApisMetaV1LabelSelector.validateJSON(data['selector']);
        }
        // ensure the json data is a string
        if (data['serviceName'] && !(typeof data['serviceName'] === 'string' || data['serviceName'] instanceof String)) {
            throw new Error("Expected the field `serviceName` to be a primitive type in the JSON string but got " + data['serviceName']);
        }
        // validate the optional field `template`
        if (data['template']) { // data not null
          IoK8sApiCoreV1PodTemplateSpec.validateJSON(data['template']);
        }
        // validate the optional field `updateStrategy`
        if (data['updateStrategy']) { // data not null
          IoK8sApiAppsV1StatefulSetUpdateStrategy.validateJSON(data['updateStrategy']);
        }
        if (data['volumeClaimTemplates']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['volumeClaimTemplates'])) {
                throw new Error("Expected the field `volumeClaimTemplates` to be an array in the JSON data but got " + data['volumeClaimTemplates']);
            }
            // validate the optional field `volumeClaimTemplates` (array)
            for (const item of data['volumeClaimTemplates']) {
                IoK8sApiCoreV1PersistentVolumeClaim.validateJSON(item);
            };
        }

        return true;
    }


}

IoK8sApiAppsV1StatefulSetSpec.RequiredProperties = ["selector", "serviceName", "template"];

/**
 * Minimum number of seconds for which a newly created pod should be ready without any of its container crashing for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
 * @member {Number} minReadySeconds
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['minReadySeconds'] = undefined;

/**
 * @member {module:model/IoK8sApiAppsV1StatefulSetOrdinals} ordinals
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['ordinals'] = undefined;

/**
 * @member {module:model/IoK8sApiAppsV1StatefulSetPersistentVolumeClaimRetentionPolicy} persistentVolumeClaimRetentionPolicy
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['persistentVolumeClaimRetentionPolicy'] = undefined;

/**
 * podManagementPolicy controls how pods are created during initial scale up, when replacing pods on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is ready before continuing. When scaling down, the pods are removed in the opposite order. The alternative policy is `Parallel` which will create pods in parallel to match the desired scale without waiting, and on scale down will delete all pods at once.  Possible enum values:  - `\"OrderedReady\"` will create pods in strictly increasing order on scale up and strictly decreasing order on scale down, progressing only when the previous pod is ready or terminated. At most one pod will be changed at any time.  - `\"Parallel\"` will create and delete pods as soon as the stateful set replica count is changed, and will not wait for pods to be ready or complete termination.
 * @member {module:model/IoK8sApiAppsV1StatefulSetSpec.PodManagementPolicyEnum} podManagementPolicy
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['podManagementPolicy'] = undefined;

/**
 * replicas is the desired number of replicas of the given Template. These are replicas in the sense that they are instantiations of the same Template, but individual replicas also have a consistent identity. If unspecified, defaults to 1.
 * @member {Number} replicas
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['replicas'] = undefined;

/**
 * revisionHistoryLimit is the maximum number of revisions that will be maintained in the StatefulSet's revision history. The revision history consists of all revisions not represented by a currently applied StatefulSetSpec version. The default value is 10.
 * @member {Number} revisionHistoryLimit
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['revisionHistoryLimit'] = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1LabelSelector} selector
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['selector'] = undefined;

/**
 * serviceName is the name of the service that governs this StatefulSet. This service must exist before the StatefulSet, and is responsible for the network identity of the set. Pods get DNS/hostnames that follow the pattern: pod-specific-string.serviceName.default.svc.cluster.local where \"pod-specific-string\" is managed by the StatefulSet controller.
 * @member {String} serviceName
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['serviceName'] = undefined;

/**
 * @member {module:model/IoK8sApiCoreV1PodTemplateSpec} template
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['template'] = undefined;

/**
 * @member {module:model/IoK8sApiAppsV1StatefulSetUpdateStrategy} updateStrategy
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['updateStrategy'] = undefined;

/**
 * volumeClaimTemplates is a list of claims that pods are allowed to reference. The StatefulSet controller is responsible for mapping network identities to claims in a way that maintains the identity of a pod. Every claim in this list must have at least one matching (by name) volumeMount in one container in the template. A claim in this list takes precedence over any volumes in the template, with the same name.
 * @member {Array.<module:model/IoK8sApiCoreV1PersistentVolumeClaim>} volumeClaimTemplates
 */
IoK8sApiAppsV1StatefulSetSpec.prototype['volumeClaimTemplates'] = undefined;





/**
 * Allowed values for the <code>podManagementPolicy</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiAppsV1StatefulSetSpec['PodManagementPolicyEnum'] = {

    /**
     * value: "OrderedReady"
     * @const
     */
    "OrderedReady": "OrderedReady",

    /**
     * value: "Parallel"
     * @const
     */
    "Parallel": "Parallel"
};



export default IoK8sApiAppsV1StatefulSetSpec;

