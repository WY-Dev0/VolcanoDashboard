/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR model module.
 * @module model/IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR
 * @version v1.30.0
 */
class IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR {
    /**
     * Constructs a new <code>IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR</code>.
     * ServerAddressByClientCIDR helps the client to determine the server address that they should use, depending on the clientCIDR that they match.
     * @alias module:model/IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR
     * @param clientCIDR {String} The CIDR with which clients can match their IP to figure out the server address that they should use.
     * @param serverAddress {String} Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.
     */
    constructor(clientCIDR, serverAddress) { 
        
        IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.initialize(this, clientCIDR, serverAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientCIDR, serverAddress) { 
        obj['clientCIDR'] = clientCIDR;
        obj['serverAddress'] = serverAddress;
    }

    /**
     * Constructs a <code>IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR} obj Optional instance to populate.
     * @return {module:model/IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR} The populated <code>IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR();

            if (data.hasOwnProperty('clientCIDR')) {
                obj['clientCIDR'] = ApiClient.convertToType(data['clientCIDR'], 'String');
            }
            if (data.hasOwnProperty('serverAddress')) {
                obj['serverAddress'] = ApiClient.convertToType(data['serverAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['clientCIDR'] && !(typeof data['clientCIDR'] === 'string' || data['clientCIDR'] instanceof String)) {
            throw new Error("Expected the field `clientCIDR` to be a primitive type in the JSON string but got " + data['clientCIDR']);
        }
        // ensure the json data is a string
        if (data['serverAddress'] && !(typeof data['serverAddress'] === 'string' || data['serverAddress'] instanceof String)) {
            throw new Error("Expected the field `serverAddress` to be a primitive type in the JSON string but got " + data['serverAddress']);
        }

        return true;
    }


}

IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.RequiredProperties = ["clientCIDR", "serverAddress"];

/**
 * The CIDR with which clients can match their IP to figure out the server address that they should use.
 * @member {String} clientCIDR
 */
IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.prototype['clientCIDR'] = undefined;

/**
 * Address of this server, suitable for a client that matches the above CIDR. This can be a hostname, hostname:port, IP or IP:port.
 * @member {String} serverAddress
 */
IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR.prototype['serverAddress'] = undefined;






export default IoK8sApimachineryPkgApisMetaV1ServerAddressByClientCIDR;

