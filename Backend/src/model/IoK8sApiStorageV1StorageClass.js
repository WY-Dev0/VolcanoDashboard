/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiCoreV1TopologySelectorTerm from './IoK8sApiCoreV1TopologySelectorTerm';
import IoK8sApimachineryPkgApisMetaV1ObjectMeta from './IoK8sApimachineryPkgApisMetaV1ObjectMeta';

/**
 * The IoK8sApiStorageV1StorageClass model module.
 * @module model/IoK8sApiStorageV1StorageClass
 * @version v1.30.0
 */
class IoK8sApiStorageV1StorageClass {
    /**
     * Constructs a new <code>IoK8sApiStorageV1StorageClass</code>.
     * StorageClass describes the parameters for a class of storage for which PersistentVolumes can be dynamically provisioned.  StorageClasses are non-namespaced; the name of the storage class according to etcd is in ObjectMeta.Name.
     * @alias module:model/IoK8sApiStorageV1StorageClass
     * @param provisioner {String} provisioner indicates the type of the provisioner.
     */
    constructor(provisioner) { 
        
        IoK8sApiStorageV1StorageClass.initialize(this, provisioner);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, provisioner) { 
        obj['provisioner'] = provisioner;
    }

    /**
     * Constructs a <code>IoK8sApiStorageV1StorageClass</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiStorageV1StorageClass} obj Optional instance to populate.
     * @return {module:model/IoK8sApiStorageV1StorageClass} The populated <code>IoK8sApiStorageV1StorageClass</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiStorageV1StorageClass();

            if (data.hasOwnProperty('allowVolumeExpansion')) {
                obj['allowVolumeExpansion'] = ApiClient.convertToType(data['allowVolumeExpansion'], 'Boolean');
            }
            if (data.hasOwnProperty('allowedTopologies')) {
                obj['allowedTopologies'] = ApiClient.convertToType(data['allowedTopologies'], [IoK8sApiCoreV1TopologySelectorTerm]);
            }
            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = IoK8sApimachineryPkgApisMetaV1ObjectMeta.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('mountOptions')) {
                obj['mountOptions'] = ApiClient.convertToType(data['mountOptions'], ['String']);
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], {'String': 'String'});
            }
            if (data.hasOwnProperty('provisioner')) {
                obj['provisioner'] = ApiClient.convertToType(data['provisioner'], 'String');
            }
            if (data.hasOwnProperty('reclaimPolicy')) {
                obj['reclaimPolicy'] = ApiClient.convertToType(data['reclaimPolicy'], 'String');
            }
            if (data.hasOwnProperty('volumeBindingMode')) {
                obj['volumeBindingMode'] = ApiClient.convertToType(data['volumeBindingMode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiStorageV1StorageClass</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiStorageV1StorageClass</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiStorageV1StorageClass.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['allowedTopologies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['allowedTopologies'])) {
                throw new Error("Expected the field `allowedTopologies` to be an array in the JSON data but got " + data['allowedTopologies']);
            }
            // validate the optional field `allowedTopologies` (array)
            for (const item of data['allowedTopologies']) {
                IoK8sApiCoreV1TopologySelectorTerm.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          IoK8sApimachineryPkgApisMetaV1ObjectMeta.validateJSON(data['metadata']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['mountOptions'])) {
            throw new Error("Expected the field `mountOptions` to be an array in the JSON data but got " + data['mountOptions']);
        }
        // ensure the json data is a string
        if (data['provisioner'] && !(typeof data['provisioner'] === 'string' || data['provisioner'] instanceof String)) {
            throw new Error("Expected the field `provisioner` to be a primitive type in the JSON string but got " + data['provisioner']);
        }
        // ensure the json data is a string
        if (data['reclaimPolicy'] && !(typeof data['reclaimPolicy'] === 'string' || data['reclaimPolicy'] instanceof String)) {
            throw new Error("Expected the field `reclaimPolicy` to be a primitive type in the JSON string but got " + data['reclaimPolicy']);
        }
        // ensure the json data is a string
        if (data['volumeBindingMode'] && !(typeof data['volumeBindingMode'] === 'string' || data['volumeBindingMode'] instanceof String)) {
            throw new Error("Expected the field `volumeBindingMode` to be a primitive type in the JSON string but got " + data['volumeBindingMode']);
        }

        return true;
    }


}

IoK8sApiStorageV1StorageClass.RequiredProperties = ["provisioner"];

/**
 * allowVolumeExpansion shows whether the storage class allow volume expand.
 * @member {Boolean} allowVolumeExpansion
 */
IoK8sApiStorageV1StorageClass.prototype['allowVolumeExpansion'] = undefined;

/**
 * allowedTopologies restrict the node topologies where volumes can be dynamically provisioned. Each volume plugin defines its own supported topology specifications. An empty TopologySelectorTerm list means there is no topology restriction. This field is only honored by servers that enable the VolumeScheduling feature.
 * @member {Array.<module:model/IoK8sApiCoreV1TopologySelectorTerm>} allowedTopologies
 */
IoK8sApiStorageV1StorageClass.prototype['allowedTopologies'] = undefined;

/**
 * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
 * @member {String} apiVersion
 */
IoK8sApiStorageV1StorageClass.prototype['apiVersion'] = undefined;

/**
 * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
 * @member {String} kind
 */
IoK8sApiStorageV1StorageClass.prototype['kind'] = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1ObjectMeta} metadata
 */
IoK8sApiStorageV1StorageClass.prototype['metadata'] = undefined;

/**
 * mountOptions controls the mountOptions for dynamically provisioned PersistentVolumes of this storage class. e.g. [\"ro\", \"soft\"]. Not validated - mount of the PVs will simply fail if one is invalid.
 * @member {Array.<String>} mountOptions
 */
IoK8sApiStorageV1StorageClass.prototype['mountOptions'] = undefined;

/**
 * parameters holds the parameters for the provisioner that should create volumes of this storage class.
 * @member {Object.<String, String>} parameters
 */
IoK8sApiStorageV1StorageClass.prototype['parameters'] = undefined;

/**
 * provisioner indicates the type of the provisioner.
 * @member {String} provisioner
 */
IoK8sApiStorageV1StorageClass.prototype['provisioner'] = undefined;

/**
 * reclaimPolicy controls the reclaimPolicy for dynamically provisioned PersistentVolumes of this storage class. Defaults to Delete.  Possible enum values:  - `\"Delete\"` means the volume will be deleted from Kubernetes on release from its claim. The volume plugin must support Deletion.  - `\"Recycle\"` means the volume will be recycled back into the pool of unbound persistent volumes on release from its claim. The volume plugin must support Recycling.  - `\"Retain\"` means the volume will be left in its current phase (Released) for manual reclamation by the administrator. The default policy is Retain.
 * @member {module:model/IoK8sApiStorageV1StorageClass.ReclaimPolicyEnum} reclaimPolicy
 */
IoK8sApiStorageV1StorageClass.prototype['reclaimPolicy'] = undefined;

/**
 * volumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.  When unset, VolumeBindingImmediate is used. This field is only honored by servers that enable the VolumeScheduling feature.  Possible enum values:  - `\"Immediate\"` indicates that PersistentVolumeClaims should be immediately provisioned and bound. This is the default mode.  - `\"WaitForFirstConsumer\"` indicates that PersistentVolumeClaims should not be provisioned and bound until the first Pod is created that references the PeristentVolumeClaim. The volume provisioning and binding will occur during Pod scheduing.
 * @member {module:model/IoK8sApiStorageV1StorageClass.VolumeBindingModeEnum} volumeBindingMode
 */
IoK8sApiStorageV1StorageClass.prototype['volumeBindingMode'] = undefined;





/**
 * Allowed values for the <code>reclaimPolicy</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiStorageV1StorageClass['ReclaimPolicyEnum'] = {

    /**
     * value: "Delete"
     * @const
     */
    "Delete": "Delete",

    /**
     * value: "Recycle"
     * @const
     */
    "Recycle": "Recycle",

    /**
     * value: "Retain"
     * @const
     */
    "Retain": "Retain"
};


/**
 * Allowed values for the <code>volumeBindingMode</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiStorageV1StorageClass['VolumeBindingModeEnum'] = {

    /**
     * value: "Immediate"
     * @const
     */
    "Immediate": "Immediate",

    /**
     * value: "WaitForFirstConsumer"
     * @const
     */
    "WaitForFirstConsumer": "WaitForFirstConsumer"
};



export default IoK8sApiStorageV1StorageClass;

