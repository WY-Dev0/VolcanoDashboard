/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiDiscoveryV1EndpointConditions model module.
 * @module model/IoK8sApiDiscoveryV1EndpointConditions
 * @version v1.30.0
 */
class IoK8sApiDiscoveryV1EndpointConditions {
    /**
     * Constructs a new <code>IoK8sApiDiscoveryV1EndpointConditions</code>.
     * EndpointConditions represents the current condition of an endpoint.
     * @alias module:model/IoK8sApiDiscoveryV1EndpointConditions
     */
    constructor() { 
        
        IoK8sApiDiscoveryV1EndpointConditions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiDiscoveryV1EndpointConditions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiDiscoveryV1EndpointConditions} obj Optional instance to populate.
     * @return {module:model/IoK8sApiDiscoveryV1EndpointConditions} The populated <code>IoK8sApiDiscoveryV1EndpointConditions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiDiscoveryV1EndpointConditions();

            if (data.hasOwnProperty('ready')) {
                obj['ready'] = ApiClient.convertToType(data['ready'], 'Boolean');
            }
            if (data.hasOwnProperty('serving')) {
                obj['serving'] = ApiClient.convertToType(data['serving'], 'Boolean');
            }
            if (data.hasOwnProperty('terminating')) {
                obj['terminating'] = ApiClient.convertToType(data['terminating'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiDiscoveryV1EndpointConditions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiDiscoveryV1EndpointConditions</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * ready indicates that this endpoint is prepared to receive traffic, according to whatever system is managing the endpoint. A nil value indicates an unknown state. In most cases consumers should interpret this unknown state as ready. For compatibility reasons, ready should never be \"true\" for terminating endpoints, except when the normal readiness behavior is being explicitly overridden, for example when the associated Service has set the publishNotReadyAddresses flag.
 * @member {Boolean} ready
 */
IoK8sApiDiscoveryV1EndpointConditions.prototype['ready'] = undefined;

/**
 * serving is identical to ready except that it is set regardless of the terminating state of endpoints. This condition should be set to true for a ready endpoint that is terminating. If nil, consumers should defer to the ready condition.
 * @member {Boolean} serving
 */
IoK8sApiDiscoveryV1EndpointConditions.prototype['serving'] = undefined;

/**
 * terminating indicates that this endpoint is terminating. A nil value indicates an unknown state. Consumers should interpret this unknown state to mean that the endpoint is not terminating.
 * @member {Boolean} terminating
 */
IoK8sApiDiscoveryV1EndpointConditions.prototype['terminating'] = undefined;






export default IoK8sApiDiscoveryV1EndpointConditions;

