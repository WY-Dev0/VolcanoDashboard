/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiStorageV1VolumeAttachmentSource from './IoK8sApiStorageV1VolumeAttachmentSource';

/**
 * The IoK8sApiStorageV1VolumeAttachmentSpec model module.
 * @module model/IoK8sApiStorageV1VolumeAttachmentSpec
 * @version v1.30.0
 */
class IoK8sApiStorageV1VolumeAttachmentSpec {
    /**
     * Constructs a new <code>IoK8sApiStorageV1VolumeAttachmentSpec</code>.
     * VolumeAttachmentSpec is the specification of a VolumeAttachment request.
     * @alias module:model/IoK8sApiStorageV1VolumeAttachmentSpec
     * @param attacher {String} attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
     * @param nodeName {String} nodeName represents the node that the volume should be attached to.
     * @param source {module:model/IoK8sApiStorageV1VolumeAttachmentSource} 
     */
    constructor(attacher, nodeName, source) { 
        
        IoK8sApiStorageV1VolumeAttachmentSpec.initialize(this, attacher, nodeName, source);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attacher, nodeName, source) { 
        obj['attacher'] = attacher;
        obj['nodeName'] = nodeName;
        obj['source'] = source;
    }

    /**
     * Constructs a <code>IoK8sApiStorageV1VolumeAttachmentSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiStorageV1VolumeAttachmentSpec} obj Optional instance to populate.
     * @return {module:model/IoK8sApiStorageV1VolumeAttachmentSpec} The populated <code>IoK8sApiStorageV1VolumeAttachmentSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiStorageV1VolumeAttachmentSpec();

            if (data.hasOwnProperty('attacher')) {
                obj['attacher'] = ApiClient.convertToType(data['attacher'], 'String');
            }
            if (data.hasOwnProperty('nodeName')) {
                obj['nodeName'] = ApiClient.convertToType(data['nodeName'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = IoK8sApiStorageV1VolumeAttachmentSource.constructFromObject(data['source']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiStorageV1VolumeAttachmentSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiStorageV1VolumeAttachmentSpec</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiStorageV1VolumeAttachmentSpec.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attacher'] && !(typeof data['attacher'] === 'string' || data['attacher'] instanceof String)) {
            throw new Error("Expected the field `attacher` to be a primitive type in the JSON string but got " + data['attacher']);
        }
        // ensure the json data is a string
        if (data['nodeName'] && !(typeof data['nodeName'] === 'string' || data['nodeName'] instanceof String)) {
            throw new Error("Expected the field `nodeName` to be a primitive type in the JSON string but got " + data['nodeName']);
        }
        // validate the optional field `source`
        if (data['source']) { // data not null
          IoK8sApiStorageV1VolumeAttachmentSource.validateJSON(data['source']);
        }

        return true;
    }


}

IoK8sApiStorageV1VolumeAttachmentSpec.RequiredProperties = ["attacher", "nodeName", "source"];

/**
 * attacher indicates the name of the volume driver that MUST handle this request. This is the name returned by GetPluginName().
 * @member {String} attacher
 */
IoK8sApiStorageV1VolumeAttachmentSpec.prototype['attacher'] = undefined;

/**
 * nodeName represents the node that the volume should be attached to.
 * @member {String} nodeName
 */
IoK8sApiStorageV1VolumeAttachmentSpec.prototype['nodeName'] = undefined;

/**
 * @member {module:model/IoK8sApiStorageV1VolumeAttachmentSource} source
 */
IoK8sApiStorageV1VolumeAttachmentSpec.prototype['source'] = undefined;






export default IoK8sApiStorageV1VolumeAttachmentSpec;

