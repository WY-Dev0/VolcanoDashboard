/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiCoreV1PortStatus from './IoK8sApiCoreV1PortStatus';

/**
 * The IoK8sApiCoreV1LoadBalancerIngress model module.
 * @module model/IoK8sApiCoreV1LoadBalancerIngress
 * @version v1.30.0
 */
class IoK8sApiCoreV1LoadBalancerIngress {
    /**
     * Constructs a new <code>IoK8sApiCoreV1LoadBalancerIngress</code>.
     * LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
     * @alias module:model/IoK8sApiCoreV1LoadBalancerIngress
     */
    constructor() { 
        
        IoK8sApiCoreV1LoadBalancerIngress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1LoadBalancerIngress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1LoadBalancerIngress} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1LoadBalancerIngress} The populated <code>IoK8sApiCoreV1LoadBalancerIngress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1LoadBalancerIngress();

            if (data.hasOwnProperty('hostname')) {
                obj['hostname'] = ApiClient.convertToType(data['hostname'], 'String');
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('ipMode')) {
                obj['ipMode'] = ApiClient.convertToType(data['ipMode'], 'String');
            }
            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], [IoK8sApiCoreV1PortStatus]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1LoadBalancerIngress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1LoadBalancerIngress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['hostname'] && !(typeof data['hostname'] === 'string' || data['hostname'] instanceof String)) {
            throw new Error("Expected the field `hostname` to be a primitive type in the JSON string but got " + data['hostname']);
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // ensure the json data is a string
        if (data['ipMode'] && !(typeof data['ipMode'] === 'string' || data['ipMode'] instanceof String)) {
            throw new Error("Expected the field `ipMode` to be a primitive type in the JSON string but got " + data['ipMode']);
        }
        if (data['ports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ports'])) {
                throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
            }
            // validate the optional field `ports` (array)
            for (const item of data['ports']) {
                IoK8sApiCoreV1PortStatus.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
 * @member {String} hostname
 */
IoK8sApiCoreV1LoadBalancerIngress.prototype['hostname'] = undefined;

/**
 * IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
 * @member {String} ip
 */
IoK8sApiCoreV1LoadBalancerIngress.prototype['ip'] = undefined;

/**
 * IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified. Setting this to \"VIP\" indicates that traffic is delivered to the node with the destination set to the load-balancer's IP and port. Setting this to \"Proxy\" indicates that traffic is delivered to the node or pod with the destination set to the node's IP and node port or the pod's IP and port. Service implementations may use this information to adjust traffic routing.
 * @member {String} ipMode
 */
IoK8sApiCoreV1LoadBalancerIngress.prototype['ipMode'] = undefined;

/**
 * Ports is a list of records of service ports If used, every port defined in the service should have an entry in it
 * @member {Array.<module:model/IoK8sApiCoreV1PortStatus>} ports
 */
IoK8sApiCoreV1LoadBalancerIngress.prototype['ports'] = undefined;






export default IoK8sApiCoreV1LoadBalancerIngress;

