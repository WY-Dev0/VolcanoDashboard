/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiAuthenticationV1UserInfo from './IoK8sApiAuthenticationV1UserInfo';

/**
 * The IoK8sApiAuthenticationV1TokenReviewStatus model module.
 * @module model/IoK8sApiAuthenticationV1TokenReviewStatus
 * @version v1.30.0
 */
class IoK8sApiAuthenticationV1TokenReviewStatus {
    /**
     * Constructs a new <code>IoK8sApiAuthenticationV1TokenReviewStatus</code>.
     * TokenReviewStatus is the result of the token authentication request.
     * @alias module:model/IoK8sApiAuthenticationV1TokenReviewStatus
     */
    constructor() { 
        
        IoK8sApiAuthenticationV1TokenReviewStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiAuthenticationV1TokenReviewStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiAuthenticationV1TokenReviewStatus} obj Optional instance to populate.
     * @return {module:model/IoK8sApiAuthenticationV1TokenReviewStatus} The populated <code>IoK8sApiAuthenticationV1TokenReviewStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiAuthenticationV1TokenReviewStatus();

            if (data.hasOwnProperty('audiences')) {
                obj['audiences'] = ApiClient.convertToType(data['audiences'], ['String']);
            }
            if (data.hasOwnProperty('authenticated')) {
                obj['authenticated'] = ApiClient.convertToType(data['authenticated'], 'Boolean');
            }
            if (data.hasOwnProperty('error')) {
                obj['error'] = ApiClient.convertToType(data['error'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = IoK8sApiAuthenticationV1UserInfo.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiAuthenticationV1TokenReviewStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiAuthenticationV1TokenReviewStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['audiences'])) {
            throw new Error("Expected the field `audiences` to be an array in the JSON data but got " + data['audiences']);
        }
        // ensure the json data is a string
        if (data['error'] && !(typeof data['error'] === 'string' || data['error'] instanceof String)) {
            throw new Error("Expected the field `error` to be a primitive type in the JSON string but got " + data['error']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          IoK8sApiAuthenticationV1UserInfo.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * Audiences are audience identifiers chosen by the authenticator that are compatible with both the TokenReview and token. An identifier is any identifier in the intersection of the TokenReviewSpec audiences and the token's audiences. A client of the TokenReview API that sets the spec.audiences field should validate that a compatible audience identifier is returned in the status.audiences field to ensure that the TokenReview server is audience aware. If a TokenReview returns an empty status.audience field where status.authenticated is \"true\", the token is valid against the audience of the Kubernetes API server.
 * @member {Array.<String>} audiences
 */
IoK8sApiAuthenticationV1TokenReviewStatus.prototype['audiences'] = undefined;

/**
 * Authenticated indicates that the token was associated with a known user.
 * @member {Boolean} authenticated
 */
IoK8sApiAuthenticationV1TokenReviewStatus.prototype['authenticated'] = undefined;

/**
 * Error indicates that the token couldn't be checked
 * @member {String} error
 */
IoK8sApiAuthenticationV1TokenReviewStatus.prototype['error'] = undefined;

/**
 * @member {module:model/IoK8sApiAuthenticationV1UserInfo} user
 */
IoK8sApiAuthenticationV1TokenReviewStatus.prototype['user'] = undefined;






export default IoK8sApiAuthenticationV1TokenReviewStatus;

