/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames model module.
 * @module model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames
 * @version v1.30.0
 */
class IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames {
    /**
     * Constructs a new <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames</code>.
     * CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
     * @alias module:model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames
     * @param kind {String} kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
     * @param plural {String} plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
     */
    constructor(kind, plural) { 
        
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.initialize(this, kind, plural);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind, plural) { 
        obj['kind'] = kind;
        obj['plural'] = plural;
    }

    /**
     * Constructs a <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames} obj Optional instance to populate.
     * @return {module:model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames} The populated <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('listKind')) {
                obj['listKind'] = ApiClient.convertToType(data['listKind'], 'String');
            }
            if (data.hasOwnProperty('plural')) {
                obj['plural'] = ApiClient.convertToType(data['plural'], 'String');
            }
            if (data.hasOwnProperty('shortNames')) {
                obj['shortNames'] = ApiClient.convertToType(data['shortNames'], ['String']);
            }
            if (data.hasOwnProperty('singular')) {
                obj['singular'] = ApiClient.convertToType(data['singular'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['listKind'] && !(typeof data['listKind'] === 'string' || data['listKind'] instanceof String)) {
            throw new Error("Expected the field `listKind` to be a primitive type in the JSON string but got " + data['listKind']);
        }
        // ensure the json data is a string
        if (data['plural'] && !(typeof data['plural'] === 'string' || data['plural'] instanceof String)) {
            throw new Error("Expected the field `plural` to be a primitive type in the JSON string but got " + data['plural']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['shortNames'])) {
            throw new Error("Expected the field `shortNames` to be an array in the JSON data but got " + data['shortNames']);
        }
        // ensure the json data is a string
        if (data['singular'] && !(typeof data['singular'] === 'string' || data['singular'] instanceof String)) {
            throw new Error("Expected the field `singular` to be a primitive type in the JSON string but got " + data['singular']);
        }

        return true;
    }


}

IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.RequiredProperties = ["kind", "plural"];

/**
 * categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
 * @member {Array.<String>} categories
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.prototype['categories'] = undefined;

/**
 * kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
 * @member {String} kind
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.prototype['kind'] = undefined;

/**
 * listKind is the serialized kind of the list for this resource. Defaults to \"`kind`List\".
 * @member {String} listKind
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.prototype['listKind'] = undefined;

/**
 * plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
 * @member {String} plural
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.prototype['plural'] = undefined;

/**
 * shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
 * @member {Array.<String>} shortNames
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.prototype['shortNames'] = undefined;

/**
 * singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
 * @member {String} singular
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames.prototype['singular'] = undefined;






export default IoK8sApiextensionsApiserverPkgApisApiextensionsV1CustomResourceDefinitionNames;

