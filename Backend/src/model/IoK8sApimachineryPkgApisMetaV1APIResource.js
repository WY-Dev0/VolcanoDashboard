/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApimachineryPkgApisMetaV1APIResource model module.
 * @module model/IoK8sApimachineryPkgApisMetaV1APIResource
 * @version v1.30.0
 */
class IoK8sApimachineryPkgApisMetaV1APIResource {
    /**
     * Constructs a new <code>IoK8sApimachineryPkgApisMetaV1APIResource</code>.
     * APIResource specifies the name of a resource and whether it is namespaced.
     * @alias module:model/IoK8sApimachineryPkgApisMetaV1APIResource
     * @param kind {String} kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
     * @param name {String} name is the plural name of the resource.
     * @param namespaced {Boolean} namespaced indicates if a resource is namespaced or not.
     * @param singularName {String} singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.
     * @param verbs {Array.<String>} verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)
     */
    constructor(kind, name, namespaced, singularName, verbs) { 
        
        IoK8sApimachineryPkgApisMetaV1APIResource.initialize(this, kind, name, namespaced, singularName, verbs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind, name, namespaced, singularName, verbs) { 
        obj['kind'] = kind;
        obj['name'] = name;
        obj['namespaced'] = namespaced;
        obj['singularName'] = singularName;
        obj['verbs'] = verbs;
    }

    /**
     * Constructs a <code>IoK8sApimachineryPkgApisMetaV1APIResource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApimachineryPkgApisMetaV1APIResource} obj Optional instance to populate.
     * @return {module:model/IoK8sApimachineryPkgApisMetaV1APIResource} The populated <code>IoK8sApimachineryPkgApisMetaV1APIResource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApimachineryPkgApisMetaV1APIResource();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('namespaced')) {
                obj['namespaced'] = ApiClient.convertToType(data['namespaced'], 'Boolean');
            }
            if (data.hasOwnProperty('shortNames')) {
                obj['shortNames'] = ApiClient.convertToType(data['shortNames'], ['String']);
            }
            if (data.hasOwnProperty('singularName')) {
                obj['singularName'] = ApiClient.convertToType(data['singularName'], 'String');
            }
            if (data.hasOwnProperty('storageVersionHash')) {
                obj['storageVersionHash'] = ApiClient.convertToType(data['storageVersionHash'], 'String');
            }
            if (data.hasOwnProperty('verbs')) {
                obj['verbs'] = ApiClient.convertToType(data['verbs'], ['String']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApimachineryPkgApisMetaV1APIResource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApimachineryPkgApisMetaV1APIResource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApimachineryPkgApisMetaV1APIResource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['shortNames'])) {
            throw new Error("Expected the field `shortNames` to be an array in the JSON data but got " + data['shortNames']);
        }
        // ensure the json data is a string
        if (data['singularName'] && !(typeof data['singularName'] === 'string' || data['singularName'] instanceof String)) {
            throw new Error("Expected the field `singularName` to be a primitive type in the JSON string but got " + data['singularName']);
        }
        // ensure the json data is a string
        if (data['storageVersionHash'] && !(typeof data['storageVersionHash'] === 'string' || data['storageVersionHash'] instanceof String)) {
            throw new Error("Expected the field `storageVersionHash` to be a primitive type in the JSON string but got " + data['storageVersionHash']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['verbs'])) {
            throw new Error("Expected the field `verbs` to be an array in the JSON data but got " + data['verbs']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

IoK8sApimachineryPkgApisMetaV1APIResource.RequiredProperties = ["kind", "name", "namespaced", "singularName", "verbs"];

/**
 * categories is a list of the grouped resources this resource belongs to (e.g. 'all')
 * @member {Array.<String>} categories
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['categories'] = undefined;

/**
 * group is the preferred group of the resource.  Empty implies the group of the containing resource list. For subresources, this may have a different value, for example: Scale\".
 * @member {String} group
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['group'] = undefined;

/**
 * kind is the kind for the resource (e.g. 'Foo' is the kind for a resource 'foo')
 * @member {String} kind
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['kind'] = undefined;

/**
 * name is the plural name of the resource.
 * @member {String} name
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['name'] = undefined;

/**
 * namespaced indicates if a resource is namespaced or not.
 * @member {Boolean} namespaced
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['namespaced'] = undefined;

/**
 * shortNames is a list of suggested short names of the resource.
 * @member {Array.<String>} shortNames
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['shortNames'] = undefined;

/**
 * singularName is the singular name of the resource.  This allows clients to handle plural and singular opaquely. The singularName is more correct for reporting status on a single item and both singular and plural are allowed from the kubectl CLI interface.
 * @member {String} singularName
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['singularName'] = undefined;

/**
 * The hash value of the storage version, the version this resource is converted to when written to the data store. Value must be treated as opaque by clients. Only equality comparison on the value is valid. This is an alpha feature and may change or be removed in the future. The field is populated by the apiserver only if the StorageVersionHash feature gate is enabled. This field will remain optional even if it graduates.
 * @member {String} storageVersionHash
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['storageVersionHash'] = undefined;

/**
 * verbs is a list of supported kube verbs (this includes get, list, watch, create, update, patch, delete, deletecollection, and proxy)
 * @member {Array.<String>} verbs
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['verbs'] = undefined;

/**
 * version is the preferred version of the resource.  Empty implies the version of the containing resource list For subresources, this may have a different value, for example: v1 (while inside a v1beta1 version of the core resource's group)\".
 * @member {String} version
 */
IoK8sApimachineryPkgApisMetaV1APIResource.prototype['version'] = undefined;






export default IoK8sApimachineryPkgApisMetaV1APIResource;

