/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiAuthorizationV1SubjectAccessReviewStatus model module.
 * @module model/IoK8sApiAuthorizationV1SubjectAccessReviewStatus
 * @version v1.30.0
 */
class IoK8sApiAuthorizationV1SubjectAccessReviewStatus {
    /**
     * Constructs a new <code>IoK8sApiAuthorizationV1SubjectAccessReviewStatus</code>.
     * SubjectAccessReviewStatus
     * @alias module:model/IoK8sApiAuthorizationV1SubjectAccessReviewStatus
     * @param allowed {Boolean} Allowed is required. True if the action would be allowed, false otherwise.
     */
    constructor(allowed) { 
        
        IoK8sApiAuthorizationV1SubjectAccessReviewStatus.initialize(this, allowed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, allowed) { 
        obj['allowed'] = allowed;
    }

    /**
     * Constructs a <code>IoK8sApiAuthorizationV1SubjectAccessReviewStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiAuthorizationV1SubjectAccessReviewStatus} obj Optional instance to populate.
     * @return {module:model/IoK8sApiAuthorizationV1SubjectAccessReviewStatus} The populated <code>IoK8sApiAuthorizationV1SubjectAccessReviewStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiAuthorizationV1SubjectAccessReviewStatus();

            if (data.hasOwnProperty('allowed')) {
                obj['allowed'] = ApiClient.convertToType(data['allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('denied')) {
                obj['denied'] = ApiClient.convertToType(data['denied'], 'Boolean');
            }
            if (data.hasOwnProperty('evaluationError')) {
                obj['evaluationError'] = ApiClient.convertToType(data['evaluationError'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiAuthorizationV1SubjectAccessReviewStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiAuthorizationV1SubjectAccessReviewStatus</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiAuthorizationV1SubjectAccessReviewStatus.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['evaluationError'] && !(typeof data['evaluationError'] === 'string' || data['evaluationError'] instanceof String)) {
            throw new Error("Expected the field `evaluationError` to be a primitive type in the JSON string but got " + data['evaluationError']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }

        return true;
    }


}

IoK8sApiAuthorizationV1SubjectAccessReviewStatus.RequiredProperties = ["allowed"];

/**
 * Allowed is required. True if the action would be allowed, false otherwise.
 * @member {Boolean} allowed
 */
IoK8sApiAuthorizationV1SubjectAccessReviewStatus.prototype['allowed'] = undefined;

/**
 * Denied is optional. True if the action would be denied, otherwise false. If both allowed is false and denied is false, then the authorizer has no opinion on whether to authorize the action. Denied may not be true if Allowed is true.
 * @member {Boolean} denied
 */
IoK8sApiAuthorizationV1SubjectAccessReviewStatus.prototype['denied'] = undefined;

/**
 * EvaluationError is an indication that some error occurred during the authorization check. It is entirely possible to get an error and be able to continue determine authorization status in spite of it. For instance, RBAC can be missing a role, but enough roles are still present and bound to reason about the request.
 * @member {String} evaluationError
 */
IoK8sApiAuthorizationV1SubjectAccessReviewStatus.prototype['evaluationError'] = undefined;

/**
 * Reason is optional.  It indicates why a request was allowed or denied.
 * @member {String} reason
 */
IoK8sApiAuthorizationV1SubjectAccessReviewStatus.prototype['reason'] = undefined;






export default IoK8sApiAuthorizationV1SubjectAccessReviewStatus;

