/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiCoreV1NamespaceCondition from './IoK8sApiCoreV1NamespaceCondition';

/**
 * The IoK8sApiCoreV1NamespaceStatus model module.
 * @module model/IoK8sApiCoreV1NamespaceStatus
 * @version v1.30.0
 */
class IoK8sApiCoreV1NamespaceStatus {
    /**
     * Constructs a new <code>IoK8sApiCoreV1NamespaceStatus</code>.
     * NamespaceStatus is information about the current status of a Namespace.
     * @alias module:model/IoK8sApiCoreV1NamespaceStatus
     */
    constructor() { 
        
        IoK8sApiCoreV1NamespaceStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1NamespaceStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1NamespaceStatus} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1NamespaceStatus} The populated <code>IoK8sApiCoreV1NamespaceStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1NamespaceStatus();

            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [IoK8sApiCoreV1NamespaceCondition]);
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ApiClient.convertToType(data['phase'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1NamespaceStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1NamespaceStatus</code>.
     */
    static validateJSON(data) {
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                IoK8sApiCoreV1NamespaceCondition.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['phase'] && !(typeof data['phase'] === 'string' || data['phase'] instanceof String)) {
            throw new Error("Expected the field `phase` to be a primitive type in the JSON string but got " + data['phase']);
        }

        return true;
    }


}



/**
 * Represents the latest available observations of a namespace's current state.
 * @member {Array.<module:model/IoK8sApiCoreV1NamespaceCondition>} conditions
 */
IoK8sApiCoreV1NamespaceStatus.prototype['conditions'] = undefined;

/**
 * Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/  Possible enum values:  - `\"Active\"` means the namespace is available for use in the system  - `\"Terminating\"` means the namespace is undergoing graceful termination
 * @member {module:model/IoK8sApiCoreV1NamespaceStatus.PhaseEnum} phase
 */
IoK8sApiCoreV1NamespaceStatus.prototype['phase'] = undefined;





/**
 * Allowed values for the <code>phase</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiCoreV1NamespaceStatus['PhaseEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Terminating"
     * @const
     */
    "Terminating": "Terminating"
};



export default IoK8sApiCoreV1NamespaceStatus;

