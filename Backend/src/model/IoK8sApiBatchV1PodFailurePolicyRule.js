/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement from './IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement';
import IoK8sApiBatchV1PodFailurePolicyOnPodConditionsPattern from './IoK8sApiBatchV1PodFailurePolicyOnPodConditionsPattern';

/**
 * The IoK8sApiBatchV1PodFailurePolicyRule model module.
 * @module model/IoK8sApiBatchV1PodFailurePolicyRule
 * @version v1.30.0
 */
class IoK8sApiBatchV1PodFailurePolicyRule {
    /**
     * Constructs a new <code>IoK8sApiBatchV1PodFailurePolicyRule</code>.
     * PodFailurePolicyRule describes how a pod failure is handled when the requirements are met. One of onExitCodes and onPodConditions, but not both, can be used in each rule.
     * @alias module:model/IoK8sApiBatchV1PodFailurePolicyRule
     * @param action {module:model/IoK8sApiBatchV1PodFailurePolicyRule.ActionEnum} Specifies the action taken on a pod failure when the requirements are satisfied. Possible values are:  - FailJob: indicates that the pod's job is marked as Failed and all   running pods are terminated. - FailIndex: indicates that the pod's index is marked as Failed and will   not be restarted.   This value is beta-level. It can be used when the   `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default). - Ignore: indicates that the counter towards the .backoffLimit is not   incremented and a replacement pod is created. - Count: indicates that the pod is handled in the default way - the   counter towards the .backoffLimit is incremented. Additional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule.  Possible enum values:  - `\"Count\"` This is an action which might be taken on a pod failure - the pod failure is handled in the default way - the counter towards .backoffLimit, represented by the job's .status.failed field, is incremented.  - `\"FailIndex\"` This is an action which might be taken on a pod failure - mark the Job's index as failed to avoid restarts within this index. This action can only be used when backoffLimitPerIndex is set. This value is beta-level.  - `\"FailJob\"` This is an action which might be taken on a pod failure - mark the pod's job as Failed and terminate all running pods.  - `\"Ignore\"` This is an action which might be taken on a pod failure - the counter towards .backoffLimit, represented by the job's .status.failed field, is not incremented and a replacement pod is created.
     */
    constructor(action) { 
        
        IoK8sApiBatchV1PodFailurePolicyRule.initialize(this, action);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action) { 
        obj['action'] = action;
    }

    /**
     * Constructs a <code>IoK8sApiBatchV1PodFailurePolicyRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiBatchV1PodFailurePolicyRule} obj Optional instance to populate.
     * @return {module:model/IoK8sApiBatchV1PodFailurePolicyRule} The populated <code>IoK8sApiBatchV1PodFailurePolicyRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiBatchV1PodFailurePolicyRule();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('onExitCodes')) {
                obj['onExitCodes'] = IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement.constructFromObject(data['onExitCodes']);
            }
            if (data.hasOwnProperty('onPodConditions')) {
                obj['onPodConditions'] = ApiClient.convertToType(data['onPodConditions'], [IoK8sApiBatchV1PodFailurePolicyOnPodConditionsPattern]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiBatchV1PodFailurePolicyRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiBatchV1PodFailurePolicyRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiBatchV1PodFailurePolicyRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // validate the optional field `onExitCodes`
        if (data['onExitCodes']) { // data not null
          IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement.validateJSON(data['onExitCodes']);
        }
        if (data['onPodConditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['onPodConditions'])) {
                throw new Error("Expected the field `onPodConditions` to be an array in the JSON data but got " + data['onPodConditions']);
            }
            // validate the optional field `onPodConditions` (array)
            for (const item of data['onPodConditions']) {
                IoK8sApiBatchV1PodFailurePolicyOnPodConditionsPattern.validateJSON(item);
            };
        }

        return true;
    }


}

IoK8sApiBatchV1PodFailurePolicyRule.RequiredProperties = ["action"];

/**
 * Specifies the action taken on a pod failure when the requirements are satisfied. Possible values are:  - FailJob: indicates that the pod's job is marked as Failed and all   running pods are terminated. - FailIndex: indicates that the pod's index is marked as Failed and will   not be restarted.   This value is beta-level. It can be used when the   `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default). - Ignore: indicates that the counter towards the .backoffLimit is not   incremented and a replacement pod is created. - Count: indicates that the pod is handled in the default way - the   counter towards the .backoffLimit is incremented. Additional values are considered to be added in the future. Clients should react to an unknown action by skipping the rule.  Possible enum values:  - `\"Count\"` This is an action which might be taken on a pod failure - the pod failure is handled in the default way - the counter towards .backoffLimit, represented by the job's .status.failed field, is incremented.  - `\"FailIndex\"` This is an action which might be taken on a pod failure - mark the Job's index as failed to avoid restarts within this index. This action can only be used when backoffLimitPerIndex is set. This value is beta-level.  - `\"FailJob\"` This is an action which might be taken on a pod failure - mark the pod's job as Failed and terminate all running pods.  - `\"Ignore\"` This is an action which might be taken on a pod failure - the counter towards .backoffLimit, represented by the job's .status.failed field, is not incremented and a replacement pod is created.
 * @member {module:model/IoK8sApiBatchV1PodFailurePolicyRule.ActionEnum} action
 */
IoK8sApiBatchV1PodFailurePolicyRule.prototype['action'] = undefined;

/**
 * @member {module:model/IoK8sApiBatchV1PodFailurePolicyOnExitCodesRequirement} onExitCodes
 */
IoK8sApiBatchV1PodFailurePolicyRule.prototype['onExitCodes'] = undefined;

/**
 * Represents the requirement on the pod conditions. The requirement is represented as a list of pod condition patterns. The requirement is satisfied if at least one pattern matches an actual pod condition. At most 20 elements are allowed.
 * @member {Array.<module:model/IoK8sApiBatchV1PodFailurePolicyOnPodConditionsPattern>} onPodConditions
 */
IoK8sApiBatchV1PodFailurePolicyRule.prototype['onPodConditions'] = undefined;





/**
 * Allowed values for the <code>action</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiBatchV1PodFailurePolicyRule['ActionEnum'] = {

    /**
     * value: "Count"
     * @const
     */
    "Count": "Count",

    /**
     * value: "FailIndex"
     * @const
     */
    "FailIndex": "FailIndex",

    /**
     * value: "FailJob"
     * @const
     */
    "FailJob": "FailJob",

    /**
     * value: "Ignore"
     * @const
     */
    "Ignore": "Ignore"
};



export default IoK8sApiBatchV1PodFailurePolicyRule;

