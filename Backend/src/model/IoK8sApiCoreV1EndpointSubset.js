/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiCoreV1EndpointAddress from './IoK8sApiCoreV1EndpointAddress';
import IoK8sApiCoreV1EndpointPort from './IoK8sApiCoreV1EndpointPort';

/**
 * The IoK8sApiCoreV1EndpointSubset model module.
 * @module model/IoK8sApiCoreV1EndpointSubset
 * @version v1.30.0
 */
class IoK8sApiCoreV1EndpointSubset {
    /**
     * Constructs a new <code>IoK8sApiCoreV1EndpointSubset</code>.
     * EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:   {    Addresses: [{\&quot;ip\&quot;: \&quot;10.10.1.1\&quot;}, {\&quot;ip\&quot;: \&quot;10.10.2.2\&quot;}],    Ports:     [{\&quot;name\&quot;: \&quot;a\&quot;, \&quot;port\&quot;: 8675}, {\&quot;name\&quot;: \&quot;b\&quot;, \&quot;port\&quot;: 309}]  }  The resulting set of endpoints can be viewed as:   a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],  b: [ 10.10.1.1:309, 10.10.2.2:309 ]
     * @alias module:model/IoK8sApiCoreV1EndpointSubset
     */
    constructor() { 
        
        IoK8sApiCoreV1EndpointSubset.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1EndpointSubset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1EndpointSubset} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1EndpointSubset} The populated <code>IoK8sApiCoreV1EndpointSubset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1EndpointSubset();

            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], [IoK8sApiCoreV1EndpointAddress]);
            }
            if (data.hasOwnProperty('notReadyAddresses')) {
                obj['notReadyAddresses'] = ApiClient.convertToType(data['notReadyAddresses'], [IoK8sApiCoreV1EndpointAddress]);
            }
            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], [IoK8sApiCoreV1EndpointPort]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1EndpointSubset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1EndpointSubset</code>.
     */
    static validateJSON(data) {
        if (data['addresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['addresses'])) {
                throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
            }
            // validate the optional field `addresses` (array)
            for (const item of data['addresses']) {
                IoK8sApiCoreV1EndpointAddress.validateJSON(item);
            };
        }
        if (data['notReadyAddresses']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['notReadyAddresses'])) {
                throw new Error("Expected the field `notReadyAddresses` to be an array in the JSON data but got " + data['notReadyAddresses']);
            }
            // validate the optional field `notReadyAddresses` (array)
            for (const item of data['notReadyAddresses']) {
                IoK8sApiCoreV1EndpointAddress.validateJSON(item);
            };
        }
        if (data['ports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ports'])) {
                throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
            }
            // validate the optional field `ports` (array)
            for (const item of data['ports']) {
                IoK8sApiCoreV1EndpointPort.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * IP addresses which offer the related ports that are marked as ready. These endpoints should be considered safe for load balancers and clients to utilize.
 * @member {Array.<module:model/IoK8sApiCoreV1EndpointAddress>} addresses
 */
IoK8sApiCoreV1EndpointSubset.prototype['addresses'] = undefined;

/**
 * IP addresses which offer the related ports but are not currently marked as ready because they have not yet finished starting, have recently failed a readiness check, or have recently failed a liveness check.
 * @member {Array.<module:model/IoK8sApiCoreV1EndpointAddress>} notReadyAddresses
 */
IoK8sApiCoreV1EndpointSubset.prototype['notReadyAddresses'] = undefined;

/**
 * Port numbers available on the related IP addresses.
 * @member {Array.<module:model/IoK8sApiCoreV1EndpointPort>} ports
 */
IoK8sApiCoreV1EndpointSubset.prototype['ports'] = undefined;






export default IoK8sApiCoreV1EndpointSubset;

