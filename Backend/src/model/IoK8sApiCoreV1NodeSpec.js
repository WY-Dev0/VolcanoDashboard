/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiCoreV1NodeConfigSource from './IoK8sApiCoreV1NodeConfigSource';
import IoK8sApiCoreV1Taint from './IoK8sApiCoreV1Taint';

/**
 * The IoK8sApiCoreV1NodeSpec model module.
 * @module model/IoK8sApiCoreV1NodeSpec
 * @version v1.30.0
 */
class IoK8sApiCoreV1NodeSpec {
    /**
     * Constructs a new <code>IoK8sApiCoreV1NodeSpec</code>.
     * NodeSpec describes the attributes that a node is created with.
     * @alias module:model/IoK8sApiCoreV1NodeSpec
     */
    constructor() { 
        
        IoK8sApiCoreV1NodeSpec.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1NodeSpec</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1NodeSpec} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1NodeSpec} The populated <code>IoK8sApiCoreV1NodeSpec</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1NodeSpec();

            if (data.hasOwnProperty('configSource')) {
                obj['configSource'] = IoK8sApiCoreV1NodeConfigSource.constructFromObject(data['configSource']);
            }
            if (data.hasOwnProperty('externalID')) {
                obj['externalID'] = ApiClient.convertToType(data['externalID'], 'String');
            }
            if (data.hasOwnProperty('podCIDR')) {
                obj['podCIDR'] = ApiClient.convertToType(data['podCIDR'], 'String');
            }
            if (data.hasOwnProperty('podCIDRs')) {
                obj['podCIDRs'] = ApiClient.convertToType(data['podCIDRs'], ['String']);
            }
            if (data.hasOwnProperty('providerID')) {
                obj['providerID'] = ApiClient.convertToType(data['providerID'], 'String');
            }
            if (data.hasOwnProperty('taints')) {
                obj['taints'] = ApiClient.convertToType(data['taints'], [IoK8sApiCoreV1Taint]);
            }
            if (data.hasOwnProperty('unschedulable')) {
                obj['unschedulable'] = ApiClient.convertToType(data['unschedulable'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1NodeSpec</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1NodeSpec</code>.
     */
    static validateJSON(data) {
        // validate the optional field `configSource`
        if (data['configSource']) { // data not null
          IoK8sApiCoreV1NodeConfigSource.validateJSON(data['configSource']);
        }
        // ensure the json data is a string
        if (data['externalID'] && !(typeof data['externalID'] === 'string' || data['externalID'] instanceof String)) {
            throw new Error("Expected the field `externalID` to be a primitive type in the JSON string but got " + data['externalID']);
        }
        // ensure the json data is a string
        if (data['podCIDR'] && !(typeof data['podCIDR'] === 'string' || data['podCIDR'] instanceof String)) {
            throw new Error("Expected the field `podCIDR` to be a primitive type in the JSON string but got " + data['podCIDR']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['podCIDRs'])) {
            throw new Error("Expected the field `podCIDRs` to be an array in the JSON data but got " + data['podCIDRs']);
        }
        // ensure the json data is a string
        if (data['providerID'] && !(typeof data['providerID'] === 'string' || data['providerID'] instanceof String)) {
            throw new Error("Expected the field `providerID` to be a primitive type in the JSON string but got " + data['providerID']);
        }
        if (data['taints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['taints'])) {
                throw new Error("Expected the field `taints` to be an array in the JSON data but got " + data['taints']);
            }
            // validate the optional field `taints` (array)
            for (const item of data['taints']) {
                IoK8sApiCoreV1Taint.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {module:model/IoK8sApiCoreV1NodeConfigSource} configSource
 */
IoK8sApiCoreV1NodeSpec.prototype['configSource'] = undefined;

/**
 * Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
 * @member {String} externalID
 */
IoK8sApiCoreV1NodeSpec.prototype['externalID'] = undefined;

/**
 * PodCIDR represents the pod IP range assigned to the node.
 * @member {String} podCIDR
 */
IoK8sApiCoreV1NodeSpec.prototype['podCIDR'] = undefined;

/**
 * podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
 * @member {Array.<String>} podCIDRs
 */
IoK8sApiCoreV1NodeSpec.prototype['podCIDRs'] = undefined;

/**
 * ID of the node assigned by the cloud provider in the format: <ProviderName>://<ProviderSpecificNodeID>
 * @member {String} providerID
 */
IoK8sApiCoreV1NodeSpec.prototype['providerID'] = undefined;

/**
 * If specified, the node's taints.
 * @member {Array.<module:model/IoK8sApiCoreV1Taint>} taints
 */
IoK8sApiCoreV1NodeSpec.prototype['taints'] = undefined;

/**
 * Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
 * @member {Boolean} unschedulable
 */
IoK8sApiCoreV1NodeSpec.prototype['unschedulable'] = undefined;






export default IoK8sApiCoreV1NodeSpec;

