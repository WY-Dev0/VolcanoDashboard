/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiCoreV1LocalVolumeSource model module.
 * @module model/IoK8sApiCoreV1LocalVolumeSource
 * @version v1.30.0
 */
class IoK8sApiCoreV1LocalVolumeSource {
    /**
     * Constructs a new <code>IoK8sApiCoreV1LocalVolumeSource</code>.
     * Local represents directly-attached storage with node affinity (Beta feature)
     * @alias module:model/IoK8sApiCoreV1LocalVolumeSource
     * @param path {String} path of the full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).
     */
    constructor(path) { 
        
        IoK8sApiCoreV1LocalVolumeSource.initialize(this, path);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, path) { 
        obj['path'] = path;
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1LocalVolumeSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1LocalVolumeSource} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1LocalVolumeSource} The populated <code>IoK8sApiCoreV1LocalVolumeSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1LocalVolumeSource();

            if (data.hasOwnProperty('fsType')) {
                obj['fsType'] = ApiClient.convertToType(data['fsType'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1LocalVolumeSource</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1LocalVolumeSource</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiCoreV1LocalVolumeSource.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fsType'] && !(typeof data['fsType'] === 'string' || data['fsType'] instanceof String)) {
            throw new Error("Expected the field `fsType` to be a primitive type in the JSON string but got " + data['fsType']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }

        return true;
    }


}

IoK8sApiCoreV1LocalVolumeSource.RequiredProperties = ["path"];

/**
 * fsType is the filesystem type to mount. It applies only when the Path is a block device. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default value is to auto-select a filesystem if unspecified.
 * @member {String} fsType
 */
IoK8sApiCoreV1LocalVolumeSource.prototype['fsType'] = undefined;

/**
 * path of the full path to the volume on the node. It can be either a directory or block device (disk, partition, ...).
 * @member {String} path
 */
IoK8sApiCoreV1LocalVolumeSource.prototype['path'] = undefined;






export default IoK8sApiCoreV1LocalVolumeSource;

