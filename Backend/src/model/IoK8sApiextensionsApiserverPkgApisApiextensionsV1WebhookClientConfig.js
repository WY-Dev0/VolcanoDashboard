/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference from './IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference';

/**
 * The IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig model module.
 * @module model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
 * @version v1.30.0
 */
class IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig {
    /**
     * Constructs a new <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig</code>.
     * WebhookClientConfig contains the information to make a TLS connection with the webhook.
     * @alias module:model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig
     */
    constructor() { 
        
        IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig} obj Optional instance to populate.
     * @return {module:model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig} The populated <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig();

            if (data.hasOwnProperty('caBundle')) {
                obj['caBundle'] = ApiClient.convertToType(data['caBundle'], 'Blob');
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference.constructFromObject(data['service']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `service`
        if (data['service']) { // data not null
          IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference.validateJSON(data['service']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
 * @member {Blob} caBundle
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig.prototype['caBundle'] = undefined;

/**
 * @member {module:model/IoK8sApiextensionsApiserverPkgApisApiextensionsV1ServiceReference} service
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig.prototype['service'] = undefined;

/**
 * url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.  The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.  Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.  The scheme must be \"https\"; the URL must begin with \"https://\".  A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.  Attempting to use a user or basic auth e.g. \"user:password@\" is not allowed. Fragments (\"#...\") and query parameters (\"?...\") are not allowed, either.
 * @member {String} url
 */
IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig.prototype['url'] = undefined;






export default IoK8sApiextensionsApiserverPkgApisApiextensionsV1WebhookClientConfig;

