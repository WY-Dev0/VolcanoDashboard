/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiRbacV1PolicyRule model module.
 * @module model/IoK8sApiRbacV1PolicyRule
 * @version v1.30.0
 */
class IoK8sApiRbacV1PolicyRule {
    /**
     * Constructs a new <code>IoK8sApiRbacV1PolicyRule</code>.
     * PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
     * @alias module:model/IoK8sApiRbacV1PolicyRule
     * @param verbs {Array.<String>} Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.
     */
    constructor(verbs) { 
        
        IoK8sApiRbacV1PolicyRule.initialize(this, verbs);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, verbs) { 
        obj['verbs'] = verbs;
    }

    /**
     * Constructs a <code>IoK8sApiRbacV1PolicyRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiRbacV1PolicyRule} obj Optional instance to populate.
     * @return {module:model/IoK8sApiRbacV1PolicyRule} The populated <code>IoK8sApiRbacV1PolicyRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiRbacV1PolicyRule();

            if (data.hasOwnProperty('apiGroups')) {
                obj['apiGroups'] = ApiClient.convertToType(data['apiGroups'], ['String']);
            }
            if (data.hasOwnProperty('nonResourceURLs')) {
                obj['nonResourceURLs'] = ApiClient.convertToType(data['nonResourceURLs'], ['String']);
            }
            if (data.hasOwnProperty('resourceNames')) {
                obj['resourceNames'] = ApiClient.convertToType(data['resourceNames'], ['String']);
            }
            if (data.hasOwnProperty('resources')) {
                obj['resources'] = ApiClient.convertToType(data['resources'], ['String']);
            }
            if (data.hasOwnProperty('verbs')) {
                obj['verbs'] = ApiClient.convertToType(data['verbs'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiRbacV1PolicyRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiRbacV1PolicyRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiRbacV1PolicyRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['apiGroups'])) {
            throw new Error("Expected the field `apiGroups` to be an array in the JSON data but got " + data['apiGroups']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['nonResourceURLs'])) {
            throw new Error("Expected the field `nonResourceURLs` to be an array in the JSON data but got " + data['nonResourceURLs']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['resourceNames'])) {
            throw new Error("Expected the field `resourceNames` to be an array in the JSON data but got " + data['resourceNames']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['resources'])) {
            throw new Error("Expected the field `resources` to be an array in the JSON data but got " + data['resources']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['verbs'])) {
            throw new Error("Expected the field `verbs` to be an array in the JSON data but got " + data['verbs']);
        }

        return true;
    }


}

IoK8sApiRbacV1PolicyRule.RequiredProperties = ["verbs"];

/**
 * APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed. \"\" represents the core API group and \"*\" represents all API groups.
 * @member {Array.<String>} apiGroups
 */
IoK8sApiRbacV1PolicyRule.prototype['apiGroups'] = undefined;

/**
 * NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path Since non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding. Rules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"/api\"),  but not both.
 * @member {Array.<String>} nonResourceURLs
 */
IoK8sApiRbacV1PolicyRule.prototype['nonResourceURLs'] = undefined;

/**
 * ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
 * @member {Array.<String>} resourceNames
 */
IoK8sApiRbacV1PolicyRule.prototype['resourceNames'] = undefined;

/**
 * Resources is a list of resources this rule applies to. '*' represents all resources.
 * @member {Array.<String>} resources
 */
IoK8sApiRbacV1PolicyRule.prototype['resources'] = undefined;

/**
 * Verbs is a list of Verbs that apply to ALL the ResourceKinds contained in this rule. '*' represents all verbs.
 * @member {Array.<String>} verbs
 */
IoK8sApiRbacV1PolicyRule.prototype['verbs'] = undefined;






export default IoK8sApiRbacV1PolicyRule;

