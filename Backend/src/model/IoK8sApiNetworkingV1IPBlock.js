/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiNetworkingV1IPBlock model module.
 * @module model/IoK8sApiNetworkingV1IPBlock
 * @version v1.30.0
 */
class IoK8sApiNetworkingV1IPBlock {
    /**
     * Constructs a new <code>IoK8sApiNetworkingV1IPBlock</code>.
     * IPBlock describes a particular CIDR (Ex. \&quot;192.168.1.0/24\&quot;,\&quot;2001:db8::/64\&quot;) that is allowed to the pods matched by a NetworkPolicySpec&#39;s podSelector. The except entry describes CIDRs that should not be included within this rule.
     * @alias module:model/IoK8sApiNetworkingV1IPBlock
     * @param cidr {String} cidr is a string representing the IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\"
     */
    constructor(cidr) { 
        
        IoK8sApiNetworkingV1IPBlock.initialize(this, cidr);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cidr) { 
        obj['cidr'] = cidr;
    }

    /**
     * Constructs a <code>IoK8sApiNetworkingV1IPBlock</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiNetworkingV1IPBlock} obj Optional instance to populate.
     * @return {module:model/IoK8sApiNetworkingV1IPBlock} The populated <code>IoK8sApiNetworkingV1IPBlock</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiNetworkingV1IPBlock();

            if (data.hasOwnProperty('cidr')) {
                obj['cidr'] = ApiClient.convertToType(data['cidr'], 'String');
            }
            if (data.hasOwnProperty('except')) {
                obj['except'] = ApiClient.convertToType(data['except'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiNetworkingV1IPBlock</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiNetworkingV1IPBlock</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiNetworkingV1IPBlock.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cidr'] && !(typeof data['cidr'] === 'string' || data['cidr'] instanceof String)) {
            throw new Error("Expected the field `cidr` to be a primitive type in the JSON string but got " + data['cidr']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['except'])) {
            throw new Error("Expected the field `except` to be an array in the JSON data but got " + data['except']);
        }

        return true;
    }


}

IoK8sApiNetworkingV1IPBlock.RequiredProperties = ["cidr"];

/**
 * cidr is a string representing the IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\"
 * @member {String} cidr
 */
IoK8sApiNetworkingV1IPBlock.prototype['cidr'] = undefined;

/**
 * except is a slice of CIDRs that should not be included within an IPBlock Valid examples are \"192.168.1.0/24\" or \"2001:db8::/64\" Except values will be rejected if they are outside the cidr range
 * @member {Array.<String>} except
 */
IoK8sApiNetworkingV1IPBlock.prototype['except'] = undefined;






export default IoK8sApiNetworkingV1IPBlock;

