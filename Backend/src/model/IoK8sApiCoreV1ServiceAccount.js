/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiCoreV1LocalObjectReference from './IoK8sApiCoreV1LocalObjectReference';
import IoK8sApiCoreV1ObjectReference from './IoK8sApiCoreV1ObjectReference';
import IoK8sApimachineryPkgApisMetaV1ObjectMeta from './IoK8sApimachineryPkgApisMetaV1ObjectMeta';

/**
 * The IoK8sApiCoreV1ServiceAccount model module.
 * @module model/IoK8sApiCoreV1ServiceAccount
 * @version v1.30.0
 */
class IoK8sApiCoreV1ServiceAccount {
    /**
     * Constructs a new <code>IoK8sApiCoreV1ServiceAccount</code>.
     * ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral systems, for an identity * a principal that can be authenticated and authorized * a set of secrets
     * @alias module:model/IoK8sApiCoreV1ServiceAccount
     */
    constructor() { 
        
        IoK8sApiCoreV1ServiceAccount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1ServiceAccount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1ServiceAccount} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1ServiceAccount} The populated <code>IoK8sApiCoreV1ServiceAccount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1ServiceAccount();

            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('automountServiceAccountToken')) {
                obj['automountServiceAccountToken'] = ApiClient.convertToType(data['automountServiceAccountToken'], 'Boolean');
            }
            if (data.hasOwnProperty('imagePullSecrets')) {
                obj['imagePullSecrets'] = ApiClient.convertToType(data['imagePullSecrets'], [IoK8sApiCoreV1LocalObjectReference]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = IoK8sApimachineryPkgApisMetaV1ObjectMeta.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('secrets')) {
                obj['secrets'] = ApiClient.convertToType(data['secrets'], [IoK8sApiCoreV1ObjectReference]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1ServiceAccount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1ServiceAccount</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        if (data['imagePullSecrets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['imagePullSecrets'])) {
                throw new Error("Expected the field `imagePullSecrets` to be an array in the JSON data but got " + data['imagePullSecrets']);
            }
            // validate the optional field `imagePullSecrets` (array)
            for (const item of data['imagePullSecrets']) {
                IoK8sApiCoreV1LocalObjectReference.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          IoK8sApimachineryPkgApisMetaV1ObjectMeta.validateJSON(data['metadata']);
        }
        if (data['secrets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['secrets'])) {
                throw new Error("Expected the field `secrets` to be an array in the JSON data but got " + data['secrets']);
            }
            // validate the optional field `secrets` (array)
            for (const item of data['secrets']) {
                IoK8sApiCoreV1ObjectReference.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
 * @member {String} apiVersion
 */
IoK8sApiCoreV1ServiceAccount.prototype['apiVersion'] = undefined;

/**
 * AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted. Can be overridden at the pod level.
 * @member {Boolean} automountServiceAccountToken
 */
IoK8sApiCoreV1ServiceAccount.prototype['automountServiceAccountToken'] = undefined;

/**
 * ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
 * @member {Array.<module:model/IoK8sApiCoreV1LocalObjectReference>} imagePullSecrets
 */
IoK8sApiCoreV1ServiceAccount.prototype['imagePullSecrets'] = undefined;

/**
 * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
 * @member {String} kind
 */
IoK8sApiCoreV1ServiceAccount.prototype['kind'] = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1ObjectMeta} metadata
 */
IoK8sApiCoreV1ServiceAccount.prototype['metadata'] = undefined;

/**
 * Secrets is a list of the secrets in the same namespace that pods running using this ServiceAccount are allowed to use. Pods are only limited to this list if this service account has a \"kubernetes.io/enforce-mountable-secrets\" annotation set to \"true\". This field should not be used to find auto-generated service account token secrets for use outside of pods. Instead, tokens can be requested directly using the TokenRequest API, or service account token secrets can be manually created. More info: https://kubernetes.io/docs/concepts/configuration/secret
 * @member {Array.<module:model/IoK8sApiCoreV1ObjectReference>} secrets
 */
IoK8sApiCoreV1ServiceAccount.prototype['secrets'] = undefined;






export default IoK8sApiCoreV1ServiceAccount;

