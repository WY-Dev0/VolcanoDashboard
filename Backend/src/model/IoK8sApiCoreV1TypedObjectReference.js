/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiCoreV1TypedObjectReference model module.
 * @module model/IoK8sApiCoreV1TypedObjectReference
 * @version v1.30.0
 */
class IoK8sApiCoreV1TypedObjectReference {
    /**
     * Constructs a new <code>IoK8sApiCoreV1TypedObjectReference</code>.
     * @alias module:model/IoK8sApiCoreV1TypedObjectReference
     * @param kind {String} Kind is the type of resource being referenced
     * @param name {String} Name is the name of resource being referenced
     */
    constructor(kind, name) { 
        
        IoK8sApiCoreV1TypedObjectReference.initialize(this, kind, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, kind, name) { 
        obj['kind'] = kind;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1TypedObjectReference</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1TypedObjectReference} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1TypedObjectReference} The populated <code>IoK8sApiCoreV1TypedObjectReference</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1TypedObjectReference();

            if (data.hasOwnProperty('apiGroup')) {
                obj['apiGroup'] = ApiClient.convertToType(data['apiGroup'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1TypedObjectReference</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1TypedObjectReference</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiCoreV1TypedObjectReference.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apiGroup'] && !(typeof data['apiGroup'] === 'string' || data['apiGroup'] instanceof String)) {
            throw new Error("Expected the field `apiGroup` to be a primitive type in the JSON string but got " + data['apiGroup']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }

        return true;
    }


}

IoK8sApiCoreV1TypedObjectReference.RequiredProperties = ["kind", "name"];

/**
 * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
 * @member {String} apiGroup
 */
IoK8sApiCoreV1TypedObjectReference.prototype['apiGroup'] = undefined;

/**
 * Kind is the type of resource being referenced
 * @member {String} kind
 */
IoK8sApiCoreV1TypedObjectReference.prototype['kind'] = undefined;

/**
 * Name is the name of resource being referenced
 * @member {String} name
 */
IoK8sApiCoreV1TypedObjectReference.prototype['name'] = undefined;

/**
 * Namespace is the namespace of resource being referenced Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details. (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
 * @member {String} namespace
 */
IoK8sApiCoreV1TypedObjectReference.prototype['namespace'] = undefined;






export default IoK8sApiCoreV1TypedObjectReference;

