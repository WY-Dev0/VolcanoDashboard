/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApiDiscoveryV1Endpoint from './IoK8sApiDiscoveryV1Endpoint';
import IoK8sApiDiscoveryV1EndpointPort from './IoK8sApiDiscoveryV1EndpointPort';
import IoK8sApimachineryPkgApisMetaV1ObjectMeta from './IoK8sApimachineryPkgApisMetaV1ObjectMeta';

/**
 * The IoK8sApiDiscoveryV1EndpointSlice model module.
 * @module model/IoK8sApiDiscoveryV1EndpointSlice
 * @version v1.30.0
 */
class IoK8sApiDiscoveryV1EndpointSlice {
    /**
     * Constructs a new <code>IoK8sApiDiscoveryV1EndpointSlice</code>.
     * EndpointSlice represents a subset of the endpoints that implement a service. For a given service there may be multiple EndpointSlice objects, selected by labels, which must be joined to produce the full set of endpoints.
     * @alias module:model/IoK8sApiDiscoveryV1EndpointSlice
     * @param addressType {module:model/IoK8sApiDiscoveryV1EndpointSlice.AddressTypeEnum} addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.  Possible enum values:  - `\"FQDN\"` represents a FQDN.  - `\"IPv4\"` represents an IPv4 Address.  - `\"IPv6\"` represents an IPv6 Address.
     * @param endpoints {Array.<module:model/IoK8sApiDiscoveryV1Endpoint>} endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.
     */
    constructor(addressType, endpoints) { 
        
        IoK8sApiDiscoveryV1EndpointSlice.initialize(this, addressType, endpoints);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, addressType, endpoints) { 
        obj['addressType'] = addressType;
        obj['endpoints'] = endpoints;
    }

    /**
     * Constructs a <code>IoK8sApiDiscoveryV1EndpointSlice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiDiscoveryV1EndpointSlice} obj Optional instance to populate.
     * @return {module:model/IoK8sApiDiscoveryV1EndpointSlice} The populated <code>IoK8sApiDiscoveryV1EndpointSlice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiDiscoveryV1EndpointSlice();

            if (data.hasOwnProperty('addressType')) {
                obj['addressType'] = ApiClient.convertToType(data['addressType'], 'String');
            }
            if (data.hasOwnProperty('apiVersion')) {
                obj['apiVersion'] = ApiClient.convertToType(data['apiVersion'], 'String');
            }
            if (data.hasOwnProperty('endpoints')) {
                obj['endpoints'] = ApiClient.convertToType(data['endpoints'], [IoK8sApiDiscoveryV1Endpoint]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = IoK8sApimachineryPkgApisMetaV1ObjectMeta.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('ports')) {
                obj['ports'] = ApiClient.convertToType(data['ports'], [IoK8sApiDiscoveryV1EndpointPort]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiDiscoveryV1EndpointSlice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiDiscoveryV1EndpointSlice</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiDiscoveryV1EndpointSlice.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['addressType'] && !(typeof data['addressType'] === 'string' || data['addressType'] instanceof String)) {
            throw new Error("Expected the field `addressType` to be a primitive type in the JSON string but got " + data['addressType']);
        }
        // ensure the json data is a string
        if (data['apiVersion'] && !(typeof data['apiVersion'] === 'string' || data['apiVersion'] instanceof String)) {
            throw new Error("Expected the field `apiVersion` to be a primitive type in the JSON string but got " + data['apiVersion']);
        }
        if (data['endpoints']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['endpoints'])) {
                throw new Error("Expected the field `endpoints` to be an array in the JSON data but got " + data['endpoints']);
            }
            // validate the optional field `endpoints` (array)
            for (const item of data['endpoints']) {
                IoK8sApiDiscoveryV1Endpoint.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          IoK8sApimachineryPkgApisMetaV1ObjectMeta.validateJSON(data['metadata']);
        }
        if (data['ports']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ports'])) {
                throw new Error("Expected the field `ports` to be an array in the JSON data but got " + data['ports']);
            }
            // validate the optional field `ports` (array)
            for (const item of data['ports']) {
                IoK8sApiDiscoveryV1EndpointPort.validateJSON(item);
            };
        }

        return true;
    }


}

IoK8sApiDiscoveryV1EndpointSlice.RequiredProperties = ["addressType", "endpoints"];

/**
 * addressType specifies the type of address carried by this EndpointSlice. All addresses in this slice must be the same type. This field is immutable after creation. The following address types are currently supported: * IPv4: Represents an IPv4 Address. * IPv6: Represents an IPv6 Address. * FQDN: Represents a Fully Qualified Domain Name.  Possible enum values:  - `\"FQDN\"` represents a FQDN.  - `\"IPv4\"` represents an IPv4 Address.  - `\"IPv6\"` represents an IPv6 Address.
 * @member {module:model/IoK8sApiDiscoveryV1EndpointSlice.AddressTypeEnum} addressType
 */
IoK8sApiDiscoveryV1EndpointSlice.prototype['addressType'] = undefined;

/**
 * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
 * @member {String} apiVersion
 */
IoK8sApiDiscoveryV1EndpointSlice.prototype['apiVersion'] = undefined;

/**
 * endpoints is a list of unique endpoints in this slice. Each slice may include a maximum of 1000 endpoints.
 * @member {Array.<module:model/IoK8sApiDiscoveryV1Endpoint>} endpoints
 */
IoK8sApiDiscoveryV1EndpointSlice.prototype['endpoints'] = undefined;

/**
 * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
 * @member {String} kind
 */
IoK8sApiDiscoveryV1EndpointSlice.prototype['kind'] = undefined;

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1ObjectMeta} metadata
 */
IoK8sApiDiscoveryV1EndpointSlice.prototype['metadata'] = undefined;

/**
 * ports specifies the list of network ports exposed by each endpoint in this slice. Each port must have a unique name. When ports is empty, it indicates that there are no defined ports. When a port is defined with a nil port value, it indicates \"all ports\". Each slice may include a maximum of 100 ports.
 * @member {Array.<module:model/IoK8sApiDiscoveryV1EndpointPort>} ports
 */
IoK8sApiDiscoveryV1EndpointSlice.prototype['ports'] = undefined;





/**
 * Allowed values for the <code>addressType</code> property.
 * @enum {String}
 * @readonly
 */
IoK8sApiDiscoveryV1EndpointSlice['AddressTypeEnum'] = {

    /**
     * value: "FQDN"
     * @const
     */
    "FQDN": "FQDN",

    /**
     * value: "IPv4"
     * @const
     */
    "IPv4": "IPv4",

    /**
     * value: "IPv6"
     * @const
     */
    "IPv6": "IPv6"
};



export default IoK8sApiDiscoveryV1EndpointSlice;

