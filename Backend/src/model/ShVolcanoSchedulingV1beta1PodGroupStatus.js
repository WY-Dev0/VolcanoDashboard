/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ShVolcanoSchedulingV1beta1PodGroupStatusConditionsInner from './ShVolcanoSchedulingV1beta1PodGroupStatusConditionsInner';

/**
 * The ShVolcanoSchedulingV1beta1PodGroupStatus model module.
 * @module model/ShVolcanoSchedulingV1beta1PodGroupStatus
 * @version v1.30.0
 */
class ShVolcanoSchedulingV1beta1PodGroupStatus {
    /**
     * Constructs a new <code>ShVolcanoSchedulingV1beta1PodGroupStatus</code>.
     * Status represents the current information about a pod group. This data may not be up to date.
     * @alias module:model/ShVolcanoSchedulingV1beta1PodGroupStatus
     */
    constructor() { 
        
        ShVolcanoSchedulingV1beta1PodGroupStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ShVolcanoSchedulingV1beta1PodGroupStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShVolcanoSchedulingV1beta1PodGroupStatus} obj Optional instance to populate.
     * @return {module:model/ShVolcanoSchedulingV1beta1PodGroupStatus} The populated <code>ShVolcanoSchedulingV1beta1PodGroupStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShVolcanoSchedulingV1beta1PodGroupStatus();

            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [ShVolcanoSchedulingV1beta1PodGroupStatusConditionsInner]);
            }
            if (data.hasOwnProperty('failed')) {
                obj['failed'] = ApiClient.convertToType(data['failed'], 'Number');
            }
            if (data.hasOwnProperty('phase')) {
                obj['phase'] = ApiClient.convertToType(data['phase'], 'String');
            }
            if (data.hasOwnProperty('running')) {
                obj['running'] = ApiClient.convertToType(data['running'], 'Number');
            }
            if (data.hasOwnProperty('succeeded')) {
                obj['succeeded'] = ApiClient.convertToType(data['succeeded'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShVolcanoSchedulingV1beta1PodGroupStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShVolcanoSchedulingV1beta1PodGroupStatus</code>.
     */
    static validateJSON(data) {
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                ShVolcanoSchedulingV1beta1PodGroupStatusConditionsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['phase'] && !(typeof data['phase'] === 'string' || data['phase'] instanceof String)) {
            throw new Error("Expected the field `phase` to be a primitive type in the JSON string but got " + data['phase']);
        }

        return true;
    }


}



/**
 * The conditions of PodGroup.
 * @member {Array.<module:model/ShVolcanoSchedulingV1beta1PodGroupStatusConditionsInner>} conditions
 */
ShVolcanoSchedulingV1beta1PodGroupStatus.prototype['conditions'] = undefined;

/**
 * The number of pods which reached phase Failed.
 * @member {Number} failed
 */
ShVolcanoSchedulingV1beta1PodGroupStatus.prototype['failed'] = undefined;

/**
 * Current phase of PodGroup.
 * @member {String} phase
 */
ShVolcanoSchedulingV1beta1PodGroupStatus.prototype['phase'] = undefined;

/**
 * The number of actively running pods.
 * @member {Number} running
 */
ShVolcanoSchedulingV1beta1PodGroupStatus.prototype['running'] = undefined;

/**
 * The number of pods which reached phase Succeeded.
 * @member {Number} succeeded
 */
ShVolcanoSchedulingV1beta1PodGroupStatus.prototype['succeeded'] = undefined;






export default ShVolcanoSchedulingV1beta1PodGroupStatus;

