/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IoK8sApiAdmissionregistrationV1ExpressionWarning model module.
 * @module model/IoK8sApiAdmissionregistrationV1ExpressionWarning
 * @version v1.30.0
 */
class IoK8sApiAdmissionregistrationV1ExpressionWarning {
    /**
     * Constructs a new <code>IoK8sApiAdmissionregistrationV1ExpressionWarning</code>.
     * ExpressionWarning is a warning information that targets a specific expression.
     * @alias module:model/IoK8sApiAdmissionregistrationV1ExpressionWarning
     * @param fieldRef {String} The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is \"spec.validations[0].expression\"
     * @param warning {String} The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.
     */
    constructor(fieldRef, warning) { 
        
        IoK8sApiAdmissionregistrationV1ExpressionWarning.initialize(this, fieldRef, warning);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fieldRef, warning) { 
        obj['fieldRef'] = fieldRef;
        obj['warning'] = warning;
    }

    /**
     * Constructs a <code>IoK8sApiAdmissionregistrationV1ExpressionWarning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiAdmissionregistrationV1ExpressionWarning} obj Optional instance to populate.
     * @return {module:model/IoK8sApiAdmissionregistrationV1ExpressionWarning} The populated <code>IoK8sApiAdmissionregistrationV1ExpressionWarning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiAdmissionregistrationV1ExpressionWarning();

            if (data.hasOwnProperty('fieldRef')) {
                obj['fieldRef'] = ApiClient.convertToType(data['fieldRef'], 'String');
            }
            if (data.hasOwnProperty('warning')) {
                obj['warning'] = ApiClient.convertToType(data['warning'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiAdmissionregistrationV1ExpressionWarning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiAdmissionregistrationV1ExpressionWarning</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiAdmissionregistrationV1ExpressionWarning.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fieldRef'] && !(typeof data['fieldRef'] === 'string' || data['fieldRef'] instanceof String)) {
            throw new Error("Expected the field `fieldRef` to be a primitive type in the JSON string but got " + data['fieldRef']);
        }
        // ensure the json data is a string
        if (data['warning'] && !(typeof data['warning'] === 'string' || data['warning'] instanceof String)) {
            throw new Error("Expected the field `warning` to be a primitive type in the JSON string but got " + data['warning']);
        }

        return true;
    }


}

IoK8sApiAdmissionregistrationV1ExpressionWarning.RequiredProperties = ["fieldRef", "warning"];

/**
 * The path to the field that refers the expression. For example, the reference to the expression of the first item of validations is \"spec.validations[0].expression\"
 * @member {String} fieldRef
 */
IoK8sApiAdmissionregistrationV1ExpressionWarning.prototype['fieldRef'] = undefined;

/**
 * The content of type checking information in a human-readable form. Each line of the warning contains the type that the expression is checked against, followed by the type check error from the compiler.
 * @member {String} warning
 */
IoK8sApiAdmissionregistrationV1ExpressionWarning.prototype['warning'] = undefined;






export default IoK8sApiAdmissionregistrationV1ExpressionWarning;

