/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.30.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IoK8sApimachineryPkgApisMetaV1LabelSelector from './IoK8sApimachineryPkgApisMetaV1LabelSelector';

/**
 * The IoK8sApiCoreV1ClusterTrustBundleProjection model module.
 * @module model/IoK8sApiCoreV1ClusterTrustBundleProjection
 * @version v1.30.0
 */
class IoK8sApiCoreV1ClusterTrustBundleProjection {
    /**
     * Constructs a new <code>IoK8sApiCoreV1ClusterTrustBundleProjection</code>.
     * ClusterTrustBundleProjection describes how to select a set of ClusterTrustBundle objects and project their contents into the pod filesystem.
     * @alias module:model/IoK8sApiCoreV1ClusterTrustBundleProjection
     * @param path {String} Relative path from the volume root to write the bundle.
     */
    constructor(path) { 
        
        IoK8sApiCoreV1ClusterTrustBundleProjection.initialize(this, path);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, path) { 
        obj['path'] = path;
    }

    /**
     * Constructs a <code>IoK8sApiCoreV1ClusterTrustBundleProjection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IoK8sApiCoreV1ClusterTrustBundleProjection} obj Optional instance to populate.
     * @return {module:model/IoK8sApiCoreV1ClusterTrustBundleProjection} The populated <code>IoK8sApiCoreV1ClusterTrustBundleProjection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IoK8sApiCoreV1ClusterTrustBundleProjection();

            if (data.hasOwnProperty('labelSelector')) {
                obj['labelSelector'] = IoK8sApimachineryPkgApisMetaV1LabelSelector.constructFromObject(data['labelSelector']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('optional')) {
                obj['optional'] = ApiClient.convertToType(data['optional'], 'Boolean');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('signerName')) {
                obj['signerName'] = ApiClient.convertToType(data['signerName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IoK8sApiCoreV1ClusterTrustBundleProjection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IoK8sApiCoreV1ClusterTrustBundleProjection</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IoK8sApiCoreV1ClusterTrustBundleProjection.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `labelSelector`
        if (data['labelSelector']) { // data not null
          IoK8sApimachineryPkgApisMetaV1LabelSelector.validateJSON(data['labelSelector']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['signerName'] && !(typeof data['signerName'] === 'string' || data['signerName'] instanceof String)) {
            throw new Error("Expected the field `signerName` to be a primitive type in the JSON string but got " + data['signerName']);
        }

        return true;
    }


}

IoK8sApiCoreV1ClusterTrustBundleProjection.RequiredProperties = ["path"];

/**
 * @member {module:model/IoK8sApimachineryPkgApisMetaV1LabelSelector} labelSelector
 */
IoK8sApiCoreV1ClusterTrustBundleProjection.prototype['labelSelector'] = undefined;

/**
 * Select a single ClusterTrustBundle by object name.  Mutually-exclusive with signerName and labelSelector.
 * @member {String} name
 */
IoK8sApiCoreV1ClusterTrustBundleProjection.prototype['name'] = undefined;

/**
 * If true, don't block pod startup if the referenced ClusterTrustBundle(s) aren't available.  If using name, then the named ClusterTrustBundle is allowed not to exist.  If using signerName, then the combination of signerName and labelSelector is allowed to match zero ClusterTrustBundles.
 * @member {Boolean} optional
 */
IoK8sApiCoreV1ClusterTrustBundleProjection.prototype['optional'] = undefined;

/**
 * Relative path from the volume root to write the bundle.
 * @member {String} path
 */
IoK8sApiCoreV1ClusterTrustBundleProjection.prototype['path'] = undefined;

/**
 * Select all ClusterTrustBundles that match this signer name. Mutually-exclusive with name.  The contents of all selected ClusterTrustBundles will be unified and deduplicated.
 * @member {String} signerName
 */
IoK8sApiCoreV1ClusterTrustBundleProjection.prototype['signerName'] = undefined;






export default IoK8sApiCoreV1ClusterTrustBundleProjection;

